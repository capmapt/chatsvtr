name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting
      run: npm run lint
    
    - name: Validate HTML
      run: npm run validate:html
    
    - name: Run unit tests
      run: npm test
    
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
    
    - name: Run E2E tests
      run: npm run test:e2e
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: test-results
        path: |
          test-results/
          playwright-report/
        retention-days: 30

  build-validation:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    
    - name: Start local server
      run: |
        python3 -m http.server 8000 &
        sleep 5
    
    - name: Test server response
      run: |
        curl -f http://localhost:8000/ || exit 1
        curl -f http://localhost:8000/pages/ai-100.html || exit 1
    
    - name: Check for broken links
      run: |
        # Basic check for common broken link patterns
        if grep -r "href=\"#\"" . --include="*.html" | grep -v "data-i18n"; then
          echo "Found potential broken links"
          exit 1
        fi

  deploy-preview:
    runs-on: ubuntu-latest
    needs: [test, build-validation]
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Cloudflare CLI
      run: npm install -g wrangler
    
    - name: Deploy to Cloudflare Pages (Preview)
      run: |
        echo "Deploying preview environment..."
        # Add Cloudflare Pages preview deployment here
        # wrangler pages publish . --project-name=chatsvtr-preview
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

  deploy-production:
    runs-on: ubuntu-latest
    needs: [test, build-validation]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Cloudflare CLI
      run: npm install -g wrangler
    
    - name: Deploy to Cloudflare Pages (Production)
      run: |
        echo "Deploying to production..."
        # Add Cloudflare Pages production deployment here
        # wrangler pages publish . --project-name=chatsvtr
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
    
    - name: Notify deployment success
      run: |
        echo "âœ… Deployment to svtrglobal.com completed successfully"