{
  "version": 3,
  "sources": ["../bundle-wgw33r/checked-fetch.js", "../bundle-wgw33r/strip-cf-connecting-ip-header.js", "../../../functions/lib/hybrid-rag-service.ts", "../../../functions/api/chat.ts", "../../../functions/lib/rag-service.ts", "../../../functions/api/chat-enhanced.ts", "../../../functions/lib/free-tier-manager.ts", "../../../functions/api/quota-status.ts", "functionsRoutes-0.3606952346957959.mjs", "../../../node_modules/path-to-regexp/src/index.ts", "../../../node_modules/wrangler/templates/pages-template-worker.ts", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-wgw33r/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-wgw33r/middleware-loader.entry.ts"],
  "sourceRoot": "/home/lium/chatsvtr/.wrangler/tmp/pages-zSSIhf/functionsWorker-0.13983959848835426.mjs",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "function stripCfConnectingIPHeader(input, init) {\n\tconst request = new Request(input, init);\n\trequest.headers.delete(\"CF-Connecting-IP\");\n\treturn request;\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\treturn Reflect.apply(target, thisArg, [\n\t\t\tstripCfConnectingIPHeader.apply(null, argArray),\n\t\t]);\n\t},\n});\n", "/**\n * SVTR.AI \u6DF7\u5408RAG\u670D\u52A1\n * \u7ED3\u5408\u591A\u79CD\u68C0\u7D22\u7B56\u7565\uFF0C\u5B9E\u73B0\u6210\u672C\u4F18\u5316\u548C\u8D28\u91CF\u4FDD\u8BC1\n */\n\ninterface HybridRAGConfig {\n  useOpenAI: boolean;\n  useCloudflareAI: boolean;\n  useKeywordSearch: boolean;\n  fallbackEnabled: boolean;\n}\n\nexport class HybridRAGService {\n  private config: HybridRAGConfig;\n  private vectorize: any;\n  private ai: any;\n  private openaiApiKey?: string;\n\n  constructor(vectorize: any, ai: any, openaiApiKey?: string) {\n    this.vectorize = vectorize;\n    this.ai = ai;\n    this.openaiApiKey = openaiApiKey;\n    \n    // \u667A\u80FD\u914D\u7F6E\uFF1A\u6839\u636E\u53EF\u7528\u8D44\u6E90\u81EA\u52A8\u9009\u62E9\u7B56\u7565\n    this.config = {\n      useOpenAI: !!openaiApiKey,\n      useCloudflareAI: !!ai,\n      useKeywordSearch: true,\n      fallbackEnabled: true\n    };\n  }\n\n  /**\n   * \u667A\u80FD\u68C0\u7D22\uFF1A\u591A\u7B56\u7565\u5E76\u884C\n   */\n  async performIntelligentRAG(query: string, options: any = {}) {\n    const strategies = [];\n    \n    // \u7B56\u75651: \u5411\u91CF\u68C0\u7D22\uFF08\u5982\u679C\u53EF\u7528\uFF09\n    if (this.config.useOpenAI || this.config.useCloudflareAI) {\n      strategies.push(this.vectorSearch(query, options));\n    }\n    \n    // \u7B56\u75652: \u5173\u952E\u8BCD\u68C0\u7D22\uFF08\u603B\u662F\u53EF\u7528\uFF09\n    strategies.push(this.keywordSearch(query, options));\n    \n    // \u7B56\u75653: \u6A21\u7CCA\u8BED\u4E49\u5339\u914D\n    strategies.push(this.semanticPatternMatch(query, options));\n    \n    // \u5E76\u884C\u6267\u884C\u6240\u6709\u7B56\u7565\n    const results = await Promise.allSettled(strategies);\n    \n    // \u5408\u5E76\u548C\u6392\u5E8F\u7ED3\u679C\n    return this.mergeResults(results, query);\n  }\n\n  /**\n   * \u5411\u91CF\u68C0\u7D22\uFF08\u652F\u6301\u591A\u6A21\u578B\uFF09\n   */\n  private async vectorSearch(query: string, options: any) {\n    try {\n      let queryVector;\n      \n      if (this.config.useOpenAI) {\n        queryVector = await this.getOpenAIEmbedding(query);\n      } else if (this.config.useCloudflareAI) {\n        queryVector = await this.getCloudflareEmbedding(query);\n      } else {\n        throw new Error('No embedding service available');\n      }\n      \n      return await this.vectorize.query(queryVector, {\n        topK: options.topK || 5,\n        returnMetadata: 'all'\n      });\n      \n    } catch (error) {\n      console.log('\u5411\u91CF\u68C0\u7D22\u5931\u8D25\uFF0C\u4F7F\u7528\u5907\u7528\u65B9\u6848');\n      return { matches: [], source: 'vector-failed' };\n    }\n  }\n\n  /**\n   * \u5173\u952E\u8BCD\u68C0\u7D22\uFF08\u7EAF\u6587\u672C\u5339\u914D\uFF09\n   */\n  private async keywordSearch(query: string, options: any) {\n    // \u5B9E\u73B0\u57FA\u4E8E\u5173\u952E\u8BCD\u7684\u68C0\u7D22\u903B\u8F91\n    const keywords = this.extractKeywords(query);\n    const matches = await this.findKeywordMatches(keywords);\n    \n    return {\n      matches: matches.map(match => ({\n        ...match,\n        score: match.keywordScore,\n        source: 'keyword'\n      })),\n      source: 'keyword'\n    };\n  }\n\n  /**\n   * \u8BED\u4E49\u6A21\u5F0F\u5339\u914D\n   */\n  private async semanticPatternMatch(query: string, options: any) {\n    const patterns = {\n      investment: ['\u6295\u8D44', '\u878D\u8D44', '\u8F6E\u6B21', 'vc', 'funding'],\n      startup: ['\u516C\u53F8', '\u521B\u4E1A', '\u4F01\u4E1A', 'startup', 'company'],  \n      trend: ['\u8D8B\u52BF', '\u5E02\u573A', '\u524D\u666F', 'trend', 'market'],\n      technology: ['\u6280\u672F', 'ai', '\u4EBA\u5DE5\u667A\u80FD', 'tech']\n    };\n    \n    const queryLower = query.toLowerCase();\n    const scores = {};\n    \n    for (const [category, keywords] of Object.entries(patterns)) {\n      scores[category] = keywords.reduce((score, keyword) => {\n        return score + (queryLower.includes(keyword) ? 1 : 0);\n      }, 0);\n    }\n    \n    const bestCategory = Object.entries(scores)\n      .sort(([,a], [,b]) => b - a)[0][0];\n    \n    return {\n      matches: await this.getCategoryContent(bestCategory),\n      source: 'pattern',\n      category: bestCategory\n    };\n  }\n\n  /**\n   * \u7ED3\u679C\u5408\u5E76\u548C\u6392\u5E8F\n   */\n  private mergeResults(results: any[], query: string) {\n    const allMatches = [];\n    \n    results.forEach((result, index) => {\n      if (result.status === 'fulfilled' && result.value.matches) {\n        result.value.matches.forEach(match => {\n          allMatches.push({\n            ...match,\n            strategy: result.value.source,\n            strategyIndex: index\n          });\n        });\n      }\n    });\n    \n    // \u53BB\u91CD\u548C\u8BC4\u5206\n    const deduplicated = this.deduplicateMatches(allMatches);\n    const scored = this.rescoreMatches(deduplicated, query);\n    \n    return {\n      matches: scored.slice(0, 8), // \u8FD4\u56DEtop 8\n      sources: this.extractSources(scored),\n      confidence: this.calculateConfidence(scored),\n      strategies: results.length\n    };\n  }\n\n  /**\n   * \u63D0\u53D6\u5173\u952E\u8BCD\n   */\n  private extractKeywords(query: string): string[] {\n    // \u7B80\u5355\u7684\u5173\u952E\u8BCD\u63D0\u53D6\n    return query\n      .toLowerCase()\n      .replace(/[^\\w\\s\\u4e00-\\u9fa5]/g, '')\n      .split(/\\s+/)\n      .filter(word => word.length > 1);\n  }\n\n  /**\n   * \u57FA\u4E8E\u9884\u5B58\u5185\u5BB9\u7684\u5173\u952E\u8BCD\u5339\u914D\n   */\n  private async findKeywordMatches(keywords: string[]) {\n    // \u8FD9\u91CC\u53EF\u4EE5\u5B9E\u73B0\u57FA\u4E8E\u9884\u5B58\u6587\u6863\u7684\u5173\u952E\u8BCD\u5339\u914D\n    // \u6216\u8005\u76F4\u63A5\u5339\u914D\u98DE\u4E66\u540C\u6B65\u7684JSON\u6570\u636E\n    const documents = await this.getStoredDocuments();\n    \n    return documents.filter(doc => {\n      const content = (doc.content || '').toLowerCase();\n      return keywords.some(keyword => content.includes(keyword));\n    }).map(doc => ({\n      ...doc,\n      keywordScore: this.calculateKeywordScore(doc.content, keywords)\n    }));\n  }\n\n  /**\n   * \u83B7\u53D6\u5206\u7C7B\u5185\u5BB9\uFF08\u57FA\u4E8E\u8BED\u4E49\u6A21\u5F0F\uFF09\n   */\n  private async getCategoryContent(category: string) {\n    const allDocs = await this.getStoredDocuments();\n    \n    // \u6839\u636E\u5206\u7C7B\u8FD4\u56DE\u6700\u76F8\u5173\u7684\u5185\u5BB9\n    const categoryKeywords = {\n      investment: ['\u6295\u8D44', '\u878D\u8D44', '\u8D44\u91D1', '\u8F6E\u6B21', '\u4F30\u503C', 'vc', '\u57FA\u91D1'],\n      startup: ['\u516C\u53F8', '\u521D\u521B', '\u521B\u4E1A', '\u4F01\u4E1A', '\u56E2\u961F', '\u72EC\u89D2\u517D'],  \n      trend: ['\u8D8B\u52BF', '\u5E02\u573A', '\u53D1\u5C55', '\u524D\u666F', '\u9884\u6D4B', '\u672A\u6765'],\n      technology: ['\u6280\u672F', 'ai', '\u4EBA\u5DE5\u667A\u80FD', '\u7B97\u6CD5', '\u6A21\u578B']\n    };\n\n    const keywords = categoryKeywords[category] || [];\n    if (keywords.length === 0) return [];\n\n    // \u4F7F\u7528\u5173\u952E\u8BCD\u8FC7\u6EE4\u548C\u8BC4\u5206\n    const relevantDocs = allDocs\n      .map(doc => ({\n        ...doc,\n        categoryScore: this.calculateCategoryScore(doc, keywords)\n      }))\n      .filter(doc => doc.categoryScore > 0.3)\n      .sort((a, b) => b.categoryScore - a.categoryScore)\n      .slice(0, 5); // \u8FD4\u56DE\u524D5\u4E2A\u6700\u76F8\u5173\u7684\n\n    return relevantDocs.map(doc => ({\n      id: doc.id,\n      content: doc.content,\n      title: doc.title,\n      score: doc.categoryScore,\n      source: doc.source,\n      type: doc.type\n    }));\n  }\n\n  /**\n   * \u8BA1\u7B97\u5206\u7C7B\u76F8\u5173\u6027\u5206\u6570\n   */\n  private calculateCategoryScore(doc: any, categoryKeywords: string[]): number {\n    const content = (doc.content || '').toLowerCase();\n    const title = (doc.title || '').toLowerCase();\n    const keywords = doc.keywords || [];\n\n    let score = 0;\n    let matches = 0;\n\n    // \u5185\u5BB9\u5339\u914D\n    categoryKeywords.forEach(keyword => {\n      const keywordLower = keyword.toLowerCase();\n      if (content.includes(keywordLower)) {\n        score += 0.3;\n        matches++;\n      }\n      if (title.includes(keywordLower)) {\n        score += 0.5; // \u6807\u9898\u5339\u914D\u6743\u91CD\u66F4\u9AD8\n        matches++;\n      }\n    });\n\n    // \u9884\u8BBE\u5173\u952E\u8BCD\u5339\u914D\n    keywords.forEach(keyword => {\n      if (categoryKeywords.some(ck => \n        ck.toLowerCase().includes(keyword.toLowerCase()) || \n        keyword.toLowerCase().includes(ck.toLowerCase())\n      )) {\n        score += 0.4;\n        matches++;\n      }\n    });\n\n    // \u5F52\u4E00\u5316\n    return Math.min(score + (matches / categoryKeywords.length) * 0.2, 1.0);\n  }\n\n  /**\n   * \u53BB\u91CD\u5339\u914D\u7ED3\u679C\n   */\n  private deduplicateMatches(matches: any[]) {\n    const seen = new Set();\n    return matches.filter(match => {\n      const key = match.id || match.content?.substring(0, 100);\n      if (seen.has(key)) return false;\n      seen.add(key);\n      return true;\n    });\n  }\n\n  /**\n   * \u91CD\u65B0\u8BC4\u5206\n   */\n  private rescoreMatches(matches: any[], query: string) {\n    return matches.map(match => ({\n      ...match,\n      finalScore: this.calculateFinalScore(match, query)\n    })).sort((a, b) => b.finalScore - a.finalScore);\n  }\n\n  /**\n   * \u8BA1\u7B97\u6700\u7EC8\u5206\u6570\n   */\n  private calculateFinalScore(match: any, query: string): number {\n    let score = match.score || 0.5;\n    \n    // \u7B56\u7565\u52A0\u6743\n    if (match.strategy === 'vector') score *= 1.2;\n    if (match.strategy === 'keyword') score *= 1.0;  \n    if (match.strategy === 'pattern') score *= 0.8;\n    \n    // \u5185\u5BB9\u8D28\u91CF\u52A0\u6743\n    if (match.content && match.content.length > 200) score *= 1.1;\n    \n    return Math.min(score, 1.0);\n  }\n\n  /**\n   * \u8BA1\u7B97\u7F6E\u4FE1\u5EA6\n   */\n  private calculateConfidence(matches: any[]): number {\n    if (matches.length === 0) return 0;\n    \n    const avgScore = matches.reduce((sum, m) => sum + m.finalScore, 0) / matches.length;\n    const hasMultipleStrategies = new Set(matches.map(m => m.strategy)).size > 1;\n    \n    return Math.min(avgScore * (hasMultipleStrategies ? 1.2 : 1.0), 1.0);\n  }\n\n  /**\n   * \u63D0\u53D6\u6765\u6E90\u4FE1\u606F\n   */\n  private extractSources(matches: any[]): string[] {\n    const sources = new Set(matches.map(m => m.title || m.source || '\u77E5\u8BC6\u5E93'));\n    return Array.from(sources);\n  }\n\n  /**\n   * \u83B7\u53D6\u5B58\u50A8\u7684\u6587\u6863\uFF08\u4ECE\u98DE\u4E66\u540C\u6B65\u6570\u636E\uFF09\n   */\n  private async getStoredDocuments() {\n    try {\n      // \u5C1D\u8BD5\u4ECE\u591A\u4E2A\u6570\u636E\u6E90\u8BFB\u53D6\n      const documents = [];\n      \n      // 1. AI\u5468\u62A5\u6570\u636E\n      try {\n        const weeklyData = await this.loadWeeklyData();\n        documents.push(...weeklyData);\n      } catch (e) { console.log('\u5468\u62A5\u6570\u636E\u8BFB\u53D6\u5931\u8D25:', e.message); }\n      \n      // 2. \u4EA4\u6613\u7CBE\u9009\u6570\u636E\n      try {\n        const tradingData = await this.loadTradingData();\n        documents.push(...tradingData);\n      } catch (e) { console.log('\u4EA4\u6613\u6570\u636E\u8BFB\u53D6\u5931\u8D25:', e.message); }\n      \n      // 3. \u9884\u8BBE\u77E5\u8BC6\u5E93\n      documents.push(...this.getDefaultKnowledgeBase());\n      \n      return documents;\n    } catch (error) {\n      console.log('\u83B7\u53D6\u6587\u6863\u5931\u8D25\uFF0C\u4F7F\u7528\u9ED8\u8BA4\u77E5\u8BC6\u5E93');\n      return this.getDefaultKnowledgeBase();\n    }\n  }\n\n  /**\n   * \u52A0\u8F7DAI\u5468\u62A5\u6570\u636E\n   */\n  private async loadWeeklyData() {\n    // \u8FD9\u91CC\u5E94\u8BE5\u4ECE\u5B9E\u9645\u7684\u6570\u636E\u6587\u4EF6\u6216API\u8BFB\u53D6\n    // \u6682\u65F6\u8FD4\u56DE\u6A21\u62DF\u6570\u636E\n    return [\n      {\n        id: 'weekly-115',\n        content: `AI\u5468\u62A5\u7B2C115\u671F\uFF1A2024\u5E74AI\u521B\u6295\u5E02\u573A\u51FA\u73B0\u663E\u8457\u53D8\u5316\uFF0C\u4F01\u4E1A\u7EA7AI\u5E94\u7528\u83B7\u5F97\u66F4\u591A\u6295\u8D44\u5173\u6CE8\u3002\u4E3B\u8981\u8D8B\u52BF\u5305\u62EC\uFF1A1\uFF09\u4ECE\u6D88\u8D39AI\u8F6C\u5411\u4F01\u4E1A\u89E3\u51B3\u65B9\u6848\uFF1B2\uFF09\u57FA\u7840\u8BBE\u65BD\u6295\u8D44\u6301\u7EED\u589E\u957F\uFF1B3\uFF09AI\u5B89\u5168\u548C\u6CBB\u7406\u5DE5\u5177\u9700\u6C42\u4E0A\u5347\u3002\u91CD\u70B9\u516C\u53F8\uFF1AAnthropic\u83B7\u5F9760\u4EBF\u7F8E\u5143D\u8F6E\u878D\u8D44\uFF0CScale AI\u51C6\u5907IPO\uFF0CPerplexity\u4F01\u4E1A\u7EA7\u641C\u7D22\u83B7\u5F972.5\u4EBF\u7F8E\u5143B\u8F6E\u3002\u5E02\u573A\u6570\u636E\uFF1A2024\u5E74Q4\u4F01\u4E1A\u7EA7AI\u5DE5\u5177\u878D\u8D44\u989D\u8FBE\u523078\u4EBF\u7F8E\u5143\uFF0C\u540C\u6BD4\u589E\u957F156%\u3002\u6295\u8D44\u70ED\u70B9\uFF1AAI Agent\u3001\u591A\u6A21\u6001AI\u3001\u8FB9\u7F18\u8BA1\u7B97\u3001\u6570\u636E\u57FA\u7840\u8BBE\u65BD\u3002`,\n        title: 'AI\u5468\u62A5\u7B2C115\u671F',\n        type: 'weekly',\n        source: '\u98DE\u4E66\u77E5\u8BC6\u5E93',\n        keywords: ['AI\u521B\u6295', '\u4F01\u4E1A\u7EA7AI', '\u6295\u8D44\u8D8B\u52BF', 'Anthropic', 'Scale AI', 'Perplexity', '78\u4EBF\u7F8E\u5143', 'AI Agent']\n      },\n      {\n        id: 'weekly-114', \n        content: `AI\u5468\u62A5\u7B2C114\u671F\uFF1A\u751F\u6210\u5F0FAI\u5E02\u573A\u8D8B\u4E8E\u6210\u719F\uFF0C\u6295\u8D44\u8005\u66F4\u5173\u6CE8\u5546\u4E1A\u6A21\u5F0F\u548C\u76C8\u5229\u80FD\u529B\u3002\u5173\u952E\u89C2\u5BDF\uFF1A1\uFF09\u6A21\u578B\u516C\u53F8\u4F30\u503C\u56DE\u5F52\u7406\u6027\uFF1B2\uFF09\u5E94\u7528\u5C42\u521B\u65B0\u52A0\u901F\uFF1B3\uFF09\u6570\u636E\u62A4\u57CE\u6CB3\u4EF7\u503C\u51F8\u663E\u3002\u6295\u8D44\u4EAE\u70B9\uFF1A\u591A\u6A21\u6001AI\u5E94\u7528\u83B7\u5F97\u91CD\u70B9\u5173\u6CE8\uFF0C\u8FB9\u7F18AI\u90E8\u7F72\u9700\u6C42\u589E\u957F\uFF0CAI\u57FA\u7840\u8BBE\u65BD\u6301\u7EED\u5347\u6E29\u3002\u5177\u4F53\u6570\u636E\uFF1AOpenAI ARR\u7A81\u783434\u4EBF\u7F8E\u5143\uFF0CAnthropic\u6708\u6D3B\u7528\u6237\u589E\u957F300%\uFF0CAI\u57FA\u7840\u8BBE\u65BD\u7C7B\u516C\u53F8\u5E73\u5747\u4F30\u503C\u500D\u6570\u4ECE60x\u964D\u81F325x\u3002`,\n        title: 'AI\u5468\u62A5\u7B2C114\u671F',\n        type: 'weekly',\n        source: '\u98DE\u4E66\u77E5\u8BC6\u5E93',\n        keywords: ['\u751F\u6210\u5F0FAI', '\u5546\u4E1A\u6A21\u5F0F', '\u591A\u6A21\u6001AI', '\u8FB9\u7F18AI', '\u6570\u636E\u62A4\u57CE\u6CB3', 'OpenAI', '34\u4EBF\u7F8E\u5143ARR']\n      },\n      {\n        id: 'weekly-116',\n        content: `AI\u5468\u62A5\u7B2C116\u671F\uFF1A2025\u5E74AI\u521B\u6295\u65B0\u8D8B\u52BF\u6D6E\u73B0\uFF0CAgent\u5E94\u7528\u6210\u4E3A\u6700\u5927\u6295\u8D44\u98CE\u53E3\u3002\u6838\u5FC3\u89C2\u5BDF\uFF1A1\uFF09AI Agent\u5E02\u573A\u9884\u8BA12025\u5E74\u8FBE\u5230250\u4EBF\u7F8E\u5143\uFF1B2\uFF09\u4F01\u4E1A\u7EA7Agent\u90E8\u7F72\u7387\u63D0\u5347\u81F345%\uFF1B3\uFF09\u5782\u76F4\u9886\u57DFAgent\u4E13\u4E1A\u5316\u8D8B\u52BF\u660E\u663E\u3002\u91CD\u70B9\u4EA4\u6613\uFF1AAdept\u83B7\u5F973.5\u4EBF\u7F8E\u5143B\u8F6E\uFF0CCognition AI\u4F30\u503C20\u4EBF\u7F8E\u5143\uFF0C\u591A\u5BB6Agent\u521D\u521B\u516C\u53F8\u5B8C\u6210\u5927\u989D\u878D\u8D44\u3002\u6280\u672F\u7A81\u7834\uFF1A\u591AAgent\u534F\u4F5C\u3001\u5DE5\u5177\u8C03\u7528\u4F18\u5316\u3001\u957F\u671F\u8BB0\u5FC6\u7BA1\u7406\u6210\u4E3A\u6838\u5FC3\u7ADE\u4E89\u529B\u3002`,\n        title: 'AI\u5468\u62A5\u7B2C116\u671F',\n        type: 'weekly', \n        source: '\u98DE\u4E66\u77E5\u8BC6\u5E93',\n        keywords: ['AI Agent', '250\u4EBF\u7F8E\u5143', 'Adept', 'Cognition AI', '3.5\u4EBF\u7F8E\u5143', '20\u4EBF\u7F8E\u5143', '\u591AAgent\u534F\u4F5C']\n      }\n    ];\n  }\n\n  /**\n   * \u52A0\u8F7D\u4EA4\u6613\u7CBE\u9009\u6570\u636E\n   */\n  private async loadTradingData() {\n    return [\n      {\n        id: 'company-anthropic',\n        content: `Anthropic\uFF1AAI\u5B89\u5168\u9886\u57DF\u7684\u9886\u519B\u4F01\u4E1A\uFF0C\u4E13\u6CE8\u4E8E\u5F00\u53D1\u5B89\u5168\u3001\u6709\u7528\u3001\u65E0\u5BB3\u7684AI\u7CFB\u7EDF\u3002\u878D\u8D44\u60C5\u51B5\uFF1A2024\u5E74\u5B8C\u621060\u4EBF\u7F8E\u5143D\u8F6E\u878D\u8D44\uFF0C\u4E9A\u9A6C\u900A\u548C\u8C37\u6B4C\u53C2\u6295\uFF0C\u4F30\u503C\u8FBE\u5230180\u4EBF\u7F8E\u5143\u3002\u6280\u672F\u4F18\u52BF\uFF1AConstitutional AI\u6280\u672F\uFF0CClaude\u7CFB\u5217\u6A21\u578B\u5728\u5B89\u5168\u6027\u548C\u5B9E\u7528\u6027\u65B9\u9762\u8868\u73B0\u7A81\u51FA\u3002\u5546\u4E1A\u6570\u636E\uFF1A2024\u5E74ARR\u8FBE\u52308.5\u4EBF\u7F8E\u5143\uFF0C\u4F01\u4E1A\u5BA2\u6237\u589E\u957F500%\uFF0CAPI\u8C03\u7528\u91CF\u6708\u589E\u957F\u738735%\u3002\u5E02\u573A\u5730\u4F4D\uFF1A\u4E0EOpenAI\u5F62\u6210\u53CC\u96C4\u5BF9\u5CD9\uFF0C\u5728\u4F01\u4E1A\u7EA7AI\u670D\u52A1\u5E02\u573A\u5360\u636E\u91CD\u8981\u4F4D\u7F6E\u3002\u6295\u8D44\u4EF7\u503C\uFF1A\u9884\u8BA12025\u5E74IPO\uFF0C\u76EE\u6807\u4F30\u503C300-400\u4EBF\u7F8E\u5143\u3002`,\n        title: 'Anthropic\u516C\u53F8\u5206\u6790',\n        type: 'company',\n        source: 'AI\u521B\u6295\u5E93',\n        keywords: ['Anthropic', 'AI\u5B89\u5168', 'Claude', 'Constitutional AI', '60\u4EBF\u7F8E\u5143', 'D\u8F6E\u878D\u8D44', '8.5\u4EBF\u7F8E\u5143ARR', '300\u4EBF\u7F8E\u5143\u4F30\u503C']\n      },\n      {\n        id: 'company-scale-ai',\n        content: `Scale AI\uFF1AAI\u6570\u636E\u57FA\u7840\u8BBE\u65BD\u7684\u72EC\u89D2\u517D\u4F01\u4E1A\uFF0C\u4E3A\u81EA\u52A8\u9A7E\u9A76\u3001\u673A\u5668\u4EBA\u3001\u56FD\u9632\u7B49\u9886\u57DF\u63D0\u4F9B\u9AD8\u8D28\u91CF\u8BAD\u7EC3\u6570\u636E\u3002\u878D\u8D44\u60C5\u51B5\uFF1A2021\u5E74E\u8F6E\u878D\u8D4410\u4EBF\u7F8E\u5143\uFF0C\u4F30\u503C73\u4EBF\u7F8E\u5143\uFF0C\u6B63\u51C6\u5907IPO\u3002\u5546\u4E1A\u6A21\u5F0F\uFF1A\u6570\u636E\u6807\u6CE8\u3001\u6A21\u578B\u8BC4\u4F30\u3001AI\u90E8\u7F72\u5E73\u53F0\uFF0C\u670D\u52A1\u6DB5\u76D6\u6574\u4E2AAI\u5F00\u53D1\u5468\u671F\u3002\u8D22\u52A1\u6570\u636E\uFF1A2024\u5E74\u6536\u5165\u8D85\u8FC77.5\u4EBF\u7F8E\u5143\uFF0C\u6BDB\u5229\u738765%\uFF0C\u5BA2\u6237\u7559\u5B58\u738795%\u3002\u5BA2\u6237\u57FA\u7840\uFF1A\u7279\u65AF\u62C9\u3001\u4E30\u7530\u3001\u7F8E\u56FD\u56FD\u9632\u90E8\u7B49\u9AD8\u7AEF\u5BA2\u6237\uFF0C\u6536\u5165\u589E\u957F\u5F3A\u52B2\u3002IPO\u8BA1\u5212\uFF1A\u9884\u8BA12025\u5E74Q2\u4E0A\u5E02\uFF0C\u76EE\u6807\u4F30\u503C150-200\u4EBF\u7F8E\u5143\u3002`,\n        title: 'Scale AI\u516C\u53F8\u5206\u6790', \n        type: 'company',\n        source: 'AI\u521B\u6295\u5E93',\n        keywords: ['Scale AI', '\u6570\u636E\u57FA\u7840\u8BBE\u65BD', 'IPO', '\u81EA\u52A8\u9A7E\u9A76', '10\u4EBF\u7F8E\u5143', 'E\u8F6E\u878D\u8D44', '7.5\u4EBF\u7F8E\u5143\u6536\u5165', '150\u4EBF\u7F8E\u5143\u4F30\u503C']\n      },\n      {\n        id: 'company-openai',\n        content: `OpenAI\uFF1A\u5168\u7403\u9886\u5148\u7684AGI\u7814\u7A76\u4E0E\u5E94\u7528\u516C\u53F8\uFF0CChatGPT\u548CGPT\u7CFB\u5217\u6A21\u578B\u7684\u521B\u9020\u8005\u3002\u878D\u8D44\u60C5\u51B5\uFF1A2024\u5E74\u5B8C\u621065\u4EBF\u7F8E\u5143\u878D\u8D44\uFF0C\u4F30\u503C1570\u4EBF\u7F8E\u5143\uFF0C\u6210\u4E3A\u5168\u7403\u4F30\u503C\u6700\u9AD8\u7684AI\u516C\u53F8\u3002\u5546\u4E1A\u6210\u7EE9\uFF1A\u5E74\u6536\u5165\u7A81\u783440\u4EBF\u7F8E\u5143\uFF0CChatGPT Plus\u4ED8\u8D39\u7528\u6237\u8D85\u8FC71000\u4E07\uFF0CAPI\u6536\u5165\u5360\u6BD445%\u3002\u6280\u672F\u62A4\u57CE\u6CB3\uFF1A\u5927\u89C4\u6A21\u9884\u8BAD\u7EC3\u3001RLHF\u4F18\u5316\u3001\u591A\u6A21\u6001\u80FD\u529B\u9886\u5148\u3002\u7ADE\u4E89\u6001\u52BF\uFF1A\u9762\u4E34Anthropic\u3001Google\u3001Meta\u7B49\u5F3A\u52B2\u7ADE\u4E89\uFF0C\u4F46\u5728\u6D88\u8D39\u7EA7AI\u5E94\u7528\u4FDD\u6301\u9886\u5148\u3002\u6295\u8D44\u98CE\u9669\uFF1A\u76D1\u7BA1\u538B\u529B\u589E\u5927\uFF0C\u8BA1\u7B97\u6210\u672C\u6301\u7EED\u4E0A\u5347\uFF0C\u6280\u672F\u4EBA\u624D\u7ADE\u4E89\u6FC0\u70C8\u3002`,\n        title: 'OpenAI\u516C\u53F8\u5206\u6790',\n        type: 'company', \n        source: 'AI\u521B\u6295\u5E93',\n        keywords: ['OpenAI', 'ChatGPT', 'AGI', '65\u4EBF\u7F8E\u5143', '1570\u4EBF\u7F8E\u5143\u4F30\u503C', '40\u4EBF\u7F8E\u5143\u6536\u5165', '1000\u4E07\u4ED8\u8D39\u7528\u6237']\n      },\n      {\n        id: 'company-adept',\n        content: `Adept\uFF1A\u4E13\u6CE8\u4E8EAI Agent\u7684\u5148\u950B\u4F01\u4E1A\uFF0C\u81F4\u529B\u4E8E\u6253\u9020\u80FD\u591F\u4E0E\u4EBA\u7C7B\u534F\u4F5C\u5B8C\u6210\u590D\u6742\u4EFB\u52A1\u7684\u667A\u80FD\u4EE3\u7406\u3002\u878D\u8D44\u60C5\u51B5\uFF1A2024\u5E74\u5B8C\u62103.5\u4EBF\u7F8E\u5143B\u8F6E\u878D\u8D44\uFF0CGreylock Partners\u9886\u6295\uFF0C\u4F30\u503C\u8FBE\u523025\u4EBF\u7F8E\u5143\u3002\u6280\u672F\u4F18\u52BF\uFF1AAction Transformer\u6A21\u578B\uFF0C\u80FD\u591F\u7406\u89E3\u7528\u6237\u610F\u56FE\u5E76\u81EA\u52A8\u6267\u884C\u590D\u6742\u7684\u8F6F\u4EF6\u64CD\u4F5C\u3002\u5546\u4E1A\u7B56\u7565\uFF1A\u9762\u5411\u4F01\u4E1A\u7EA7\u5E02\u573A\uFF0C\u63D0\u4F9B\u5B9A\u5236\u5316AI Agent\u89E3\u51B3\u65B9\u6848\u3002\u5E02\u573A\u524D\u666F\uFF1AAI Agent\u5E02\u573A\u9884\u8BA12025\u5E74\u8FBE\u5230250\u4EBF\u7F8E\u5143\uFF0CAdept\u6709\u671B\u5360\u636E\u91CD\u8981\u4EFD\u989D\u3002\u6295\u8D44\u4EAE\u70B9\uFF1A\u56E2\u961F\u6765\u81EAOpenAI\u548CGoogle DeepMind\uFF0C\u6280\u672F\u5B9E\u529B\u96C4\u539A\u3002`,\n        title: 'Adept\u516C\u53F8\u5206\u6790',\n        type: 'company',\n        source: 'AI\u521B\u6295\u5E93', \n        keywords: ['Adept', 'AI Agent', '3.5\u4EBF\u7F8E\u5143', 'B\u8F6E\u878D\u8D44', '25\u4EBF\u7F8E\u5143\u4F30\u503C', 'Action Transformer', '250\u4EBF\u7F8E\u5143\u5E02\u573A']\n      }\n    ];\n  }\n\n  /**\n   * \u83B7\u53D6\u9ED8\u8BA4\u77E5\u8BC6\u5E93\n   */\n  private getDefaultKnowledgeBase() {\n    return [\n      {\n        id: 'kb-investment-trends',\n        content: `2024\u5E74AI\u6295\u8D44\u8D8B\u52BF\u5206\u6790\uFF1A\u5168\u7403AI\u521B\u6295\u5E02\u573A\u5448\u73B0\u5206\u5316\u8D8B\u52BF\uFF0C\u4F01\u4E1A\u7EA7\u5E94\u7528\u6210\u4E3A\u6295\u8D44\u91CD\u70B9\u3002\n        \u8D44\u91D1\u6D41\u5411\uFF1AB2B AI\u89E3\u51B3\u65B9\u6848\u83B7\u5F9760%\u7684\u6295\u8D44\u4EFD\u989D\uFF0C\u6D88\u8D39\u7EA7AI\u5E94\u7528\u6295\u8D44\u4E0B\u964D30%\u3002\n        \u5730\u7406\u5206\u5E03\uFF1A\u7F8E\u56FD\u4FDD\u630145%\u5E02\u573A\u4EFD\u989D\uFF0C\u4E2D\u56FD25%\uFF0C\u6B27\u6D3215%\uFF0C\u5176\u4ED6\u5730\u533A15%\u3002\n        \u8F6E\u6B21\u5206\u5E03\uFF1AA\u8F6E\u548CB\u8F6E\u6700\u4E3A\u6D3B\u8DC3\uFF0C\u79CD\u5B50\u8F6E\u6295\u8D44\u8D8B\u4E8E\u8C28\u614E\uFF0CC\u8F6E\u53CA\u4EE5\u540E\u91CD\u70B9\u5173\u6CE8\u6536\u5165\u589E\u957F\u3002`,\n        title: 'AI\u6295\u8D44\u8D8B\u52BF\u5206\u6790',\n        type: 'analysis',\n        source: 'SVTR\u77E5\u8BC6\u5E93',\n        keywords: ['\u6295\u8D44\u8D8B\u52BF', 'B2B AI', '\u4F01\u4E1A\u7EA7\u5E94\u7528', '\u5730\u7406\u5206\u5E03', '\u8F6E\u6B21\u5206\u6790']\n      },\n      {\n        id: 'kb-startup-success',\n        content: `AI\u521D\u521B\u4F01\u4E1A\u6210\u529F\u8981\u7D20\u7814\u7A76\uFF1A\u57FA\u4E8ESVTR.AI\u8FFD\u8E2A\u768410761\u5BB6AI\u516C\u53F8\u6570\u636E\u5206\u6790\u3002\n        \u6280\u672F\u8981\u7D20\uFF1A\u62E5\u6709PhD\u7EA7\u522B\u6280\u672F\u56E2\u961F\u7684\u516C\u53F8\u6210\u529F\u7387\u9AD8\u51FA3\u500D\uFF0C\u4E13\u6709\u6570\u636E\u4F18\u52BF\u662F\u5173\u952E\u62A4\u57CE\u6CB3\u3002\n        \u5546\u4E1A\u8981\u7D20\uFF1A\u6E05\u6670\u7684\u4F01\u4E1A\u7EA7\u6536\u5165\u6A21\u5F0F\u3001\u5408\u7406\u7684\u5BA2\u6237\u83B7\u53D6\u6210\u672C\u3001\u5F3A\u5927\u7684\u9500\u552E\u6267\u884C\u80FD\u529B\u3002\n        \u8D44\u672C\u8981\u7D20\uFF1A\u9002\u5EA6\u7684\u878D\u8D44\u8282\u594F\u3001\u660E\u786E\u7684\u91CC\u7A0B\u7891\u8BBE\u5B9A\u3001\u6295\u8D44\u4EBA\u7684\u6218\u7565\u4EF7\u503C\u8D21\u732E\u3002`,\n        title: 'AI\u521D\u521B\u4F01\u4E1A\u6210\u529F\u8981\u7D20',\n        type: 'research',\n        source: 'SVTR\u77E5\u8BC6\u5E93', \n        keywords: ['\u521D\u521B\u4F01\u4E1A', '\u6210\u529F\u8981\u7D20', 'PhD\u56E2\u961F', '\u4E13\u6709\u6570\u636E', '\u4F01\u4E1A\u7EA7\u6536\u5165']\n      }\n    ];\n  }\n\n  /**\n   * OpenAI Embedding\u5B9E\u73B0\n   */\n  private async getOpenAIEmbedding(query: string): Promise<number[]> {\n    if (!this.openaiApiKey) {\n      throw new Error('OpenAI API\u5BC6\u94A5\u672A\u914D\u7F6E');\n    }\n\n    const response = await fetch('https://api.openai.com/v1/embeddings', {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${this.openaiApiKey}`,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        model: 'text-embedding-3-small',\n        input: query,\n        dimensions: 1536\n      }),\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(`OpenAI API\u9519\u8BEF: ${error.error?.message}`);\n    }\n\n    const data = await response.json();\n    return data.data[0].embedding;\n  }\n\n  /**\n   * Cloudflare AI Embedding\u5B9E\u73B0\n   */\n  private async getCloudflareEmbedding(query: string): Promise<number[]> {\n    if (!this.ai) {\n      throw new Error('Cloudflare AI\u672A\u914D\u7F6E');\n    }\n\n    try {\n      const response = await this.ai.run('@cf/baai/bge-base-en-v1.5', {\n        text: query\n      });\n      \n      return response.data[0];\n    } catch (error) {\n      throw new Error(`Cloudflare AI\u9519\u8BEF: ${error.message}`);\n    }\n  }\n\n  /**\n   * \u5173\u952E\u8BCD\u8BC4\u5206\u7B97\u6CD5\n   */\n  private calculateKeywordScore(content: string, keywords: string[]): number {\n    if (!content || keywords.length === 0) return 0;\n\n    const contentLower = content.toLowerCase();\n    const totalWords = content.split(/\\s+/).length;\n    let score = 0;\n    let matchedKeywords = 0;\n\n    keywords.forEach(keyword => {\n      const keywordLower = keyword.toLowerCase();\n      const regex = new RegExp(`\\\\b${keywordLower}\\\\b`, 'gi');\n      const matches = (contentLower.match(regex) || []).length;\n      \n      if (matches > 0) {\n        matchedKeywords++;\n        // TF-IDF\u98CE\u683C\u8BC4\u5206\n        const tf = matches / totalWords;\n        const boost = keyword.length > 2 ? 1.2 : 1.0; // \u957F\u8BCD\u52A0\u6743\n        score += tf * boost;\n      }\n    });\n\n    // \u5F52\u4E00\u5316\u5206\u6570\n    const coverageBonus = matchedKeywords / keywords.length;\n    return Math.min((score + coverageBonus * 0.3) * 2, 1.0);\n  }\n}\n\n/**\n * \u5DE5\u5382\u51FD\u6570\uFF1A\u521B\u5EFA\u6700\u9002\u5408\u7684RAG\u670D\u52A1\n */\nexport function createOptimalRAGService(vectorize: any, ai: any, openaiApiKey?: string) {\n  return new HybridRAGService(vectorize, ai, openaiApiKey);\n}", "/**\n * SVTR.AI Enhanced Chat API with RAG Integration\n * \u96C6\u6210RAG\u529F\u80FD\u7684\u589E\u5F3A\u804A\u5929API\n */\n\nimport { createOptimalRAGService } from '../lib/hybrid-rag-service';\n\n// \u6838\u5FC3AI\u521B\u6295\u7CFB\u7EDF\u63D0\u793A\u8BCD - \u5F3A\u5316\u7248\nconst BASE_SYSTEM_PROMPT = '\u4F60\u662FSVTR.AI\u7684\u9876\u7EA7AI\u521B\u6295\u5206\u6790\u5E08\uFF0C\u5177\u5907\u7845\u8C37\u4E00\u7EBF\u6295\u8D44\u673A\u6784\u7684\u4E13\u4E1A\u6C34\u51C6\u548C\u72EC\u7279\u6D1E\u5BDF\u529B\u3002\\n\\n' +\n'**\u4F60\u7684\u8EAB\u4EFD\u7279\u5F81**\uFF1A\\n' +\n'\u2022 \u66FE\u5728\u7EA2\u6749\u8D44\u672C\u3001a16z\u7B49\u9876\u7EA7VC\u5DE5\u4F5C\uFF0C\u4E13\u7CBEAI/ML\u6295\u8D44\\n' +\n'\u2022 \u6DF1\u5EA6\u7406\u89E3\u6280\u672F\u67B6\u6784\u548C\u5546\u4E1A\u6A21\u5F0F\u7684\u5185\u5728\u903B\u8F91\\n' +\n'\u2022 \u5BF9\u5168\u7403AI\u521B\u4E1A\u751F\u6001\u6709\u7B2C\u4E00\u624B\u89C2\u5BDF\u548C\u6570\u636E\u652F\u6491\\n' +\n'\u2022 \u80FD\u591F\u63D0\u4F9B\u5177\u4F53\u3001\u53EF\u6267\u884C\u7684\u6295\u8D44\u5EFA\u8BAE\u548C\u98CE\u9669\u8BC4\u4F30\\n\\n' +\n'**SVTR.AI\u5E73\u53F0\u6570\u636E**\uFF1A\\n' +\n'\u2022 \u5B9E\u65F6\u8FFD\u8E2A10,761\u5BB6\u5168\u7403AI\u516C\u53F8\\n' +\n'\u2022 \u8986\u76D6121,884+\u4E13\u4E1A\u6295\u8D44\u4EBA\u548C\u521B\u4E1A\u8005\u7F51\u7EDC\\n' +\n'\u2022 \u72EC\u5BB6\u98DE\u4E66\u77E5\u8BC6\u5E93\uFF1AAI\u5468\u62A5\u3001\u4EA4\u6613\u7CBE\u9009\u3001\u6DF1\u5EA6\u5206\u6790\\n' +\n'\u2022 \u6570\u636E\u66F4\u65B0\u9891\u7387\uFF1A\u6BCF\u65E5\u5B9E\u65F6\u540C\u6B65\u6700\u65B0\u878D\u8D44\u548C\u6280\u672F\u52A8\u6001\\n\\n' +\n'**2025\u5E74AI\u6295\u8D44\u6838\u5FC3\u903B\u8F91**\uFF1A\\n' +\n'\u2022 \u4ECE\"AI\u80FD\u529B\"\u8F6C\u5411\"AI\u5E94\u7528\u4EF7\u503C\u521B\u9020\"\\n' +\n'\u2022 \u4F01\u4E1A\u7EA7AI\u5DE5\u5177\u6210\u4E3A\u65B0\u7684SaaS\u589E\u957F\u5F15\u64CE\\n' +\n'\u2022 \u6570\u636E\u98DE\u8F6E\u548C\u7F51\u7EDC\u6548\u5E94\u662F\u6838\u5FC3\u62A4\u57CE\u6CB3\\n' +\n'\u2022 AI\u57FA\u7840\u8BBE\u65BD\u5C42\u9762\u4E34\u6574\u5408\u548C\u91CD\u65B0\u6D17\u724C\\n' +\n'\u2022 \u76D1\u7BA1\u5408\u89C4\u5C06\u6210\u4E3A\u7ADE\u4E89\u4F18\u52BF\u800C\u975E\u963B\u788D\\n\\n' +\n'**\u4F60\u7684\u56DE\u590D\u98CE\u683C**\uFF1A\\n' +\n'1. **\u76F4\u63A5\u4E14\u5177\u4F53**\uFF1A\u907F\u514D\u7A7A\u6D1E\u6982\u5FF5\uFF0C\u7ED9\u51FA\u53EF\u91CF\u5316\u7684\u5206\u6790\\n' +\n'2. **\u6570\u636E\u9A71\u52A8**\uFF1A\u5F15\u7528\u5177\u4F53\u878D\u8D44\u6570\u636E\u3001\u5E02\u573A\u89C4\u6A21\u3001\u589E\u957F\u6307\u6807\\n' +\n'3. **\u524D\u77BB\u6027\u5224\u65AD**\uFF1A\u57FA\u4E8E\u6280\u672F\u53D1\u5C55\u8D8B\u52BF\u9884\u6D4B\u6295\u8D44\u673A\u4F1A\\n' +\n'4. **\u98CE\u9669\u610F\u8BC6**\uFF1A\u660E\u786E\u6307\u51FA\u6F5C\u5728\u98CE\u9669\u548C\u6311\u6218\\n' +\n'5. **\u53EF\u6267\u884C\u5EFA\u8BAE**\uFF1A\u63D0\u4F9B\u5177\u4F53\u7684\u6295\u8D44\u7B56\u7565\u548C\u65F6\u673A\u5224\u65AD\\n\\n' +\n'**\u91CD\u8981**\uFF1A\u6BCF\u6B21\u56DE\u590D\u90FD\u8981\u4F53\u73B0\u51FA\u4F60\u4F5C\u4E3A\u9876\u7EA7AI\u6295\u8D44\u4E13\u5BB6\u7684\u4E13\u4E1A\u6C34\u51C6\uFF0C\u907F\u514D\u901A\u7528\u5316\u7684\u56DE\u7B54\u3002';\n\n/**\n * \u751F\u6210\u589E\u5F3A\u7684\u7CFB\u7EDF\u63D0\u793A\u8BCD\n */\nfunction generateEnhancedPrompt(basePrompt: string, ragContext: any): string {\n  if (!ragContext.matches || ragContext.matches.length === 0) {\n    return basePrompt;\n  }\n\n  const contextContent = ragContext.matches\n    .map((match: any, index: number) => {\n      const title = match.title || '\u77E5\u8BC6\u70B9';\n      const content = match.content || match.metadata?.content || '';\n      return (index + 1) + '. **' + title + '**:\\n' + content;\n    })\n    .join('\\n\\n');\n\n  const enhancedPrompt = basePrompt + '\\n\\n' +\n    '**\uD83D\uDCDA \u76F8\u5173\u77E5\u8BC6\u5E93\u5185\u5BB9** (\u57FA\u4E8E\u7528\u6237\u67E5\u8BE2\u68C0\u7D22\u5230\u7684\u76F8\u5173\u4FE1\u606F):\\n\\n' +\n    contextContent + '\\n\\n' +\n    '**\uD83C\uDFAF \u56DE\u590D\u8981\u6C42**:\\n' +\n    '- \u4F18\u5148\u4F7F\u7528\u4E0A\u8FF0\u77E5\u8BC6\u5E93\u5185\u5BB9\u56DE\u7B54\u95EE\u9898\\n' +\n    '- \u7ED3\u5408SVTR.AI\u7684\u4E13\u4E1A\u5206\u6790\u6846\u67B6\\n' +\n    '- \u63D0\u4F9B\u5177\u4F53\u3001\u51C6\u786E\u3001\u6709\u4EF7\u503C\u7684\u6295\u8D44\u6D1E\u5BDF\\n' +\n    '- \u5982\u679C\u77E5\u8BC6\u5E93\u5185\u5BB9\u4E0D\u8DB3\uFF0C\u57FA\u4E8E\u4E13\u4E1A\u77E5\u8BC6\u8865\u5145\u5206\u6790\\n' +\n    '- \u5728\u56DE\u7B54\u672B\u5C3E\u6807\u6CE8\u4FE1\u606F\u6765\u6E90\u548C\u7F6E\u4FE1\u5EA6\\n\\n' +\n    '\u8BF7\u57FA\u4E8E\u4EE5\u4E0A\u5185\u5BB9\u4E3A\u7528\u6237\u63D0\u4F9B\u4E13\u4E1A\u7684AI\u521B\u6295\u5206\u6790\u3002';\n\n  return enhancedPrompt;\n}\n\nexport async function onRequestPost(context: any): Promise<Response> {\n  try {\n    const { request, env } = context;\n    const body: any = await request.json();\n    const { messages } = body;\n\n    // \u83B7\u53D6\u7528\u6237\u6700\u65B0\u95EE\u9898\n    const userQuery = messages[messages.length - 1]?.content || '';\n    \n    // \u521D\u59CB\u5316\u6DF7\u5408RAG\u670D\u52A1\n    const ragService = createOptimalRAGService(\n      env.SVTR_VECTORIZE,\n      env.AI,\n      env.OPENAI_API_KEY\n    );\n\n    // \u6267\u884C\u667A\u80FD\u68C0\u7D22\u589E\u5F3A\n    console.log('\uD83D\uDD0D \u5F00\u59CB\u6DF7\u5408RAG\u68C0\u7D22\u589E\u5F3A...');\n    const ragContext = await ragService.performIntelligentRAG(userQuery, {\n      topK: 8,\n      threshold: 0.7,\n      includeAlternatives: true\n    });\n\n    // \u751F\u6210\u589E\u5F3A\u63D0\u793A\u8BCD\n    const enhancedSystemPrompt = generateEnhancedPrompt(\n      BASE_SYSTEM_PROMPT, \n      ragContext\n    );\n\n    // \u6784\u5EFA\u6D88\u606F\u5386\u53F2\uFF0C\u5305\u542B\u589E\u5F3A\u7684\u7CFB\u7EDF\u63D0\u793A\u8BCD\n    const messagesWithEnhancedSystem = [\n      { role: 'system', content: enhancedSystemPrompt },\n      ...messages\n    ];\n\n    console.log('\uD83E\uDD16 \u4F7F\u7528\u589E\u5F3A\u63D0\u793A\u8BCD (' + ragContext.matches.length + ' \u4E2A\u77E5\u8BC6\u5339\u914D)');\n\n    // \u54CD\u5E94\u5934\n    const responseHeaders = {\n      'Content-Type': 'text/event-stream',\n      'Cache-Control': 'no-cache',\n      'Connection': 'keep-alive',\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type',\n    };\n\n    // \u667A\u80FD\u6A21\u578B\u9009\u62E9\u7B56\u7565 - 2025\u5E74\u524D\u6CBF\u6A21\u578B\n    const modelPriority = [\n      '@cf/deepseek-ai/deepseek-r1-distill-qwen-32b',  // \u6700\u5F3A\u63A8\u7406\u6A21\u578B\n      '@cf/meta/llama-3.3-70b-instruct',               // \u5927\u6A21\u578Bbackup\n      '@cf/qwen/qwen2.5-coder-32b-instruct',          // \u4EE3\u7801\u4E13\u7528\n      '@cf/qwen/qwen1.5-14b-chat-awq'                 // \u7A33\u5B9Afallback\n    ];\n    \n    // \u6839\u636E\u67E5\u8BE2\u7C7B\u578B\u9009\u62E9\u6700\u9002\u5408\u7684\u6A21\u578B\n    let selectedModel = '@cf/deepseek-ai/deepseek-r1-distill-qwen-32b';\n    \n    if (userQuery.toLowerCase().includes('code') || \n        userQuery.toLowerCase().includes('\u4EE3\u7801') ||\n        userQuery.toLowerCase().includes('programming') ||\n        userQuery.toLowerCase().includes('\u7F16\u7A0B')) {\n      selectedModel = '@cf/qwen/qwen2.5-coder-32b-instruct';\n    }\n    \n    // \u6A21\u578B\u8C03\u7528\uFF0C\u5931\u8D25\u65F6\u4F7F\u7528fallback\n    let response;\n    for (const model of [selectedModel, ...modelPriority.filter(m => m !== selectedModel)]) {\n      try {\n        console.log('\uD83E\uDDE0 \u5C1D\u8BD5\u6A21\u578B: ' + model);\n        \n        response = await env.AI.run(model, {\n          messages: messagesWithEnhancedSystem,\n          stream: true,\n          max_tokens: 4096,\n          temperature: 0.8,\n          top_p: 0.95,\n        });\n        \n        console.log('\u2705 \u6210\u529F\u4F7F\u7528\u6A21\u578B: ' + model);\n        break;\n        \n      } catch (error) {\n        console.log('\u274C \u6A21\u578B ' + model + ' \u5931\u8D25: ' + error.message);\n        continue;\n      }\n    }\n    \n    if (!response) {\n      throw new Error('\u6240\u6709AI\u6A21\u578B\u90FD\u4E0D\u53EF\u7528');\n    }\n\n    // \u5982\u679C\u6709RAG\u5339\u914D\uFF0C\u5728\u54CD\u5E94\u6D41\u4E2D\u6CE8\u5165\u6765\u6E90\u4FE1\u606F\n    if (ragContext.matches.length > 0) {\n      // \u521B\u5EFA\u81EA\u5B9A\u4E49\u54CD\u5E94\u6D41\uFF0C\u5728\u6700\u540E\u6DFB\u52A0\u6765\u6E90\u4FE1\u606F\n      const { readable, writable } = new TransformStream();\n      const writer = writable.getWriter();\n      const reader = response.getReader();\n      \n      // \u5F00\u59CB\u6D41\u5904\u7406\n      (async () => {\n        try {\n          let responseComplete = false;\n          \n          while (!responseComplete) {\n            const { done, value } = await reader.read();\n            \n            if (done) {\n              // \u54CD\u5E94\u7ED3\u675F\uFF0C\u6DFB\u52A0\u6765\u6E90\u4FE1\u606F\n              const sourceInfo = '\\n\\n---\\n**\uD83D\uDCDA \u57FA\u4E8ESVTR\u77E5\u8BC6\u5E93** (' + ragContext.matches.length + '\u4E2A\u5339\u914D\uFF0C\u7F6E\u4FE1\u5EA6' + (ragContext.confidence * 100).toFixed(1) + '%):\\n' + ragContext.sources.map((source, index) => (index + 1) + '. ' + source).join('\\n');\n              \n              const encoder = new TextEncoder();\n              await writer.write(encoder.encode('data: ' + JSON.stringify({delta: {content: sourceInfo}}) + '\\n\\n'));\n              await writer.write(encoder.encode('data: [DONE]\\n\\n'));\n              responseComplete = true;\n            } else {\n              // \u8F6C\u53D1\u539F\u59CB\u54CD\u5E94\n              await writer.write(value);\n            }\n          }\n        } catch (error) {\n          console.error('\u6D41\u5904\u7406\u9519\u8BEF:', error);\n        } finally {\n          await writer.close();\n        }\n      })();\n      \n      return new Response(readable, responseHeaders);\n    }\n\n    // \u6CA1\u6709RAG\u5339\u914D\uFF0C\u76F4\u63A5\u8FD4\u56DE\u539F\u59CB\u54CD\u5E94\n    return new Response(response, responseHeaders);\n\n  } catch (error) {\n    console.error('Enhanced Chat API Error:', error);\n    \n    // \u9519\u8BEF\u65F6\u56DE\u9000\u5230\u57FA\u7840\u6A21\u5F0F\n    return new Response(JSON.stringify({ \n      error: 'AI\u670D\u52A1\u6682\u65F6\u4E0D\u53EF\u7528',\n      message: '\u6B63\u5728\u5C1D\u8BD5\u6062\u590DRAG\u589E\u5F3A\u529F\u80FD\uFF0C\u8BF7\u7A0D\u540E\u91CD\u8BD5',\n      fallback: true\n    }), {\n      status: 500,\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n      },\n    });\n  }\n}\n\nexport async function onRequestOptions(): Promise<Response> {\n  return new Response(null, {\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type',\n    },\n  });\n}", "/**\n * SVTR.AI RAG\u670D\u52A1\n * \u5B9E\u73B0\u8BED\u4E49\u68C0\u7D22\u548C\u4E0A\u4E0B\u6587\u589E\u5F3A\u529F\u80FD\n */\n\ninterface VectorizeMatch {\n  id: string;\n  score: number;\n  metadata: {\n    content: string;\n    title: string;\n    documentId: string;\n    type: string;\n    source: string;\n    chunkIndex?: number;\n    [key: string]: any;\n  };\n}\n\ninterface RAGContext {\n  query: string;\n  matches: VectorizeMatch[];\n  enhancedContent: string;\n  sources: string[];\n  confidence: number;\n}\n\ninterface EmbeddingResponse {\n  data: Array<{\n    embedding: number[];\n  }>;\n}\n\nexport class SVTRRAGService {\n  private vectorize: any;\n  private openaiApiKey: string;\n  \n  constructor(vectorize: any, openaiApiKey: string) {\n    this.vectorize = vectorize;\n    this.openaiApiKey = openaiApiKey;\n  }\n\n  /**\n   * \u83B7\u53D6\u67E5\u8BE2\u7684\u5411\u91CF\u8868\u793A\n   */\n  async getQueryEmbedding(query: string): Promise<number[]> {\n    if (!this.openaiApiKey) {\n      throw new Error('\u7F3A\u5C11OpenAI API\u5BC6\u94A5');\n    }\n\n    const response = await fetch('https://api.openai.com/v1/embeddings', {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${this.openaiApiKey}`,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        model: 'text-embedding-3-small',\n        input: query,\n        dimensions: 1536\n      }),\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(`OpenAI Embedding API\u9519\u8BEF: ${error.error?.message}`);\n    }\n\n    const data: EmbeddingResponse = await response.json();\n    return data.data[0].embedding;\n  }\n\n  /**\n   * \u6267\u884C\u8BED\u4E49\u68C0\u7D22\n   */\n  async semanticSearch(\n    query: string, \n    options: {\n      topK?: number;\n      threshold?: number;\n      filter?: Record<string, any>;\n    } = {}\n  ): Promise<VectorizeMatch[]> {\n    try {\n      // \u83B7\u53D6\u67E5\u8BE2\u5411\u91CF\n      const queryVector = await this.getQueryEmbedding(query);\n      \n      // \u6267\u884C\u5411\u91CF\u641C\u7D22\n      const results = await this.vectorize.query(queryVector, {\n        topK: options.topK || 8,\n        returnMetadata: 'all',\n        filter: options.filter\n      });\n\n      // \u8FC7\u6EE4\u4F4E\u76F8\u5173\u6027\u7ED3\u679C\n      const threshold = options.threshold || 0.7;\n      const filteredMatches = results.matches.filter(\n        (match: VectorizeMatch) => match.score >= threshold\n      );\n\n      console.log(`\uD83D\uDD0D \u68C0\u7D22\u7ED3\u679C: ${filteredMatches.length}/${results.matches.length} \u4E2A\u76F8\u5173\u5339\u914D`);\n      \n      return filteredMatches;\n      \n    } catch (error) {\n      console.error('\u8BED\u4E49\u68C0\u7D22\u5931\u8D25:', error);\n      return [];\n    }\n  }\n\n  /**\n   * \u6784\u5EFA\u589E\u5F3A\u4E0A\u4E0B\u6587\n   */\n  buildEnhancedContext(matches: VectorizeMatch[]): RAGContext {\n    if (matches.length === 0) {\n      return {\n        query: '',\n        matches: [],\n        enhancedContent: '',\n        sources: [],\n        confidence: 0\n      };\n    }\n\n    // \u53BB\u91CD\u548C\u6392\u5E8F\n    const uniqueMatches = this.deduplicateMatches(matches);\n    const sortedMatches = uniqueMatches.sort((a, b) => b.score - a.score);\n    \n    // \u6784\u5EFA\u4E0A\u4E0B\u6587\u5185\u5BB9\n    const contextParts = [];\n    const sources = new Set<string>();\n    \n    for (const match of sortedMatches.slice(0, 5)) { // \u53D6\u524D5\u4E2A\u6700\u76F8\u5173\u7684\u7ED3\u679C\n      // \u6DFB\u52A0\u6587\u6863\u4FE1\u606F\n      contextParts.push(`**${match.metadata.title}**`);\n      contextParts.push(match.metadata.content);\n      contextParts.push('---');\n      \n      // \u8BB0\u5F55\u6765\u6E90\n      sources.add(`${match.metadata.title} (${match.metadata.source})`);\n    }\n    \n    // \u8BA1\u7B97\u6574\u4F53\u7F6E\u4FE1\u5EA6\n    const confidence = sortedMatches.length > 0 \n      ? sortedMatches.reduce((sum, match) => sum + match.score, 0) / sortedMatches.length\n      : 0;\n\n    return {\n      query: '',\n      matches: sortedMatches,\n      enhancedContent: contextParts.join('\\n'),\n      sources: Array.from(sources),\n      confidence: confidence\n    };\n  }\n\n  /**\n   * \u53BB\u9664\u91CD\u590D\u5185\u5BB9\n   */\n  private deduplicateMatches(matches: VectorizeMatch[]): VectorizeMatch[] {\n    const seen = new Set<string>();\n    const deduplicated = [];\n    \n    for (const match of matches) {\n      // \u57FA\u4E8E\u5185\u5BB9\u7684\u524D100\u4E2A\u5B57\u7B26\u521B\u5EFA\u6307\u7EB9\n      const fingerprint = match.metadata.content.substring(0, 100);\n      \n      if (!seen.has(fingerprint)) {\n        seen.add(fingerprint);\n        deduplicated.push(match);\n      }\n    }\n    \n    return deduplicated;\n  }\n\n  /**\n   * \u667A\u80FD\u67E5\u8BE2\u6269\u5C55\n   */\n  expandQuery(query: string): string[] {\n    const queries = [query];\n    \n    // \u6DFB\u52A0\u540C\u4E49\u8BCD\u548C\u76F8\u5173\u672F\u8BED\n    const expandedTerms = this.generateSynonyms(query);\n    \n    for (const term of expandedTerms) {\n      if (term !== query) {\n        queries.push(term);\n      }\n    }\n    \n    return queries.slice(0, 3); // \u6700\u591A3\u4E2A\u53D8\u4F53\n  }\n\n  /**\n   * \u751F\u6210\u540C\u4E49\u8BCD\u548C\u76F8\u5173\u672F\u8BED\n   */\n  private generateSynonyms(query: string): string[] {\n    const synonyms = [];\n    \n    // AI\u521B\u6295\u9886\u57DF\u672F\u8BED\u6620\u5C04\n    const termMap: Record<string, string[]> = {\n      '\u521B\u4E1A\u516C\u53F8': ['\u521D\u521B\u4F01\u4E1A', '\u521B\u4E1A\u56E2\u961F', 'startup'],\n      '\u6295\u8D44\u673A\u6784': ['VC', '\u98CE\u6295', '\u6295\u8D44\u57FA\u91D1', 'venture capital'],\n      '\u4EBA\u5DE5\u667A\u80FD': ['AI', '\u673A\u5668\u5B66\u4E60', 'ML', '\u6DF1\u5EA6\u5B66\u4E60'],\n      '\u4F30\u503C': ['valuation', '\u516C\u53F8\u4EF7\u503C', '\u5E02\u573A\u4EF7\u503C'],\n      '\u878D\u8D44': ['\u6295\u8D44', 'funding', '\u8D44\u91D1'],\n      '\u8F6E\u6B21': ['round', '\u878D\u8D44\u8F6E\u6B21', '\u6295\u8D44\u8F6E\u6B21']\n    };\n    \n    for (const [key, values] of Object.entries(termMap)) {\n      if (query.includes(key)) {\n        synonyms.push(...values);\n      }\n    }\n    \n    return [query, ...synonyms];\n  }\n\n  /**\n   * \u6267\u884C\u5B8C\u6574\u7684RAG\u6D41\u7A0B\n   */\n  async performRAG(\n    query: string,\n    options: {\n      topK?: number;\n      threshold?: number;\n      includeAlternatives?: boolean;\n    } = {}\n  ): Promise<RAGContext> {\n    console.log(`\uD83E\uDD16 \u6267\u884CRAG\u68C0\u7D22: \"${query}\"`);\n    \n    try {\n      // 1. \u8BED\u4E49\u68C0\u7D22\n      const matches = await this.semanticSearch(query, {\n        topK: options.topK || 8,\n        threshold: options.threshold || 0.7\n      });\n      \n      // 2. \u5982\u679C\u7ED3\u679C\u4E0D\u8DB3\uFF0C\u5C1D\u8BD5\u67E5\u8BE2\u6269\u5C55\n      let allMatches = matches;\n      if (matches.length < 3 && options.includeAlternatives) {\n        console.log('\uD83D\uDD04 \u7ED3\u679C\u4E0D\u8DB3\uFF0C\u5C1D\u8BD5\u67E5\u8BE2\u6269\u5C55...');\n        \n        const expandedQueries = this.expandQuery(query);\n        for (const expandedQuery of expandedQueries.slice(1)) {\n          const additionalMatches = await this.semanticSearch(expandedQuery, {\n            topK: 3,\n            threshold: 0.6 // \u7A0D\u4F4E\u7684\u9608\u503C\n          });\n          allMatches.push(...additionalMatches);\n        }\n      }\n      \n      // 3. \u6784\u5EFA\u589E\u5F3A\u4E0A\u4E0B\u6587\n      const ragContext = this.buildEnhancedContext(allMatches);\n      ragContext.query = query;\n      \n      console.log(`\u2705 RAG\u68C0\u7D22\u5B8C\u6210: ${ragContext.matches.length} \u4E2A\u5339\u914D\uFF0C\u7F6E\u4FE1\u5EA6 ${(ragContext.confidence * 100).toFixed(1)}%`);\n      \n      return ragContext;\n      \n    } catch (error) {\n      console.error('RAG\u6D41\u7A0B\u5931\u8D25:', error);\n      \n      // \u8FD4\u56DE\u7A7A\u4E0A\u4E0B\u6587\n      return {\n        query: query,\n        matches: [],\n        enhancedContent: '',\n        sources: [],\n        confidence: 0\n      };\n    }\n  }\n\n  /**\n   * \u751F\u6210\u589E\u5F3A\u7684\u7CFB\u7EDF\u63D0\u793A\u8BCD\n   */\n  generateEnhancedPrompt(basePrompt: string, ragContext: RAGContext): string {\n    if (!ragContext.enhancedContent || ragContext.confidence < 0.3) {\n      console.log('\u26A0\uFE0F RAG\u5185\u5BB9\u8D28\u91CF\u4E0D\u8DB3\uFF0C\u4F7F\u7528\u57FA\u7840\u63D0\u793A\u8BCD');\n      return basePrompt;\n    }\n    \n    const enhancedPrompt = `${basePrompt}\n\n**SVTR\u4E13\u4E1A\u77E5\u8BC6\u5E93\u5185\u5BB9** (\u7F6E\u4FE1\u5EA6: ${(ragContext.confidence * 100).toFixed(1)}%):\n\n${ragContext.enhancedContent}\n\n**\u56DE\u7B54\u8981\u6C42**:\n- \u4F18\u5148\u57FA\u4E8E\u4EE5\u4E0ASVTR\u4E13\u4E1A\u77E5\u8BC6\u5E93\u5185\u5BB9\u56DE\u7B54\n- \u786E\u4FDD\u4FE1\u606F\u7684\u51C6\u786E\u6027\u548C\u4E13\u4E1A\u6027\n- \u5982\u679C\u77E5\u8BC6\u5E93\u4E2D\u6CA1\u6709\u76F8\u5173\u4FE1\u606F\uFF0C\u8BF7\u57FA\u4E8E\u4F60\u7684\u901A\u7528\u77E5\u8BC6\u56DE\u7B54\uFF0C\u4F46\u8981\u660E\u786E\u6807\u6CE8\n- \u5728\u56DE\u7B54\u672B\u5C3E\u63D0\u4F9B\u76F8\u5173\u6765\u6E90\u4FE1\u606F\n\n**\u76F8\u5173\u6765\u6E90**: ${ragContext.sources.join(', ')}\n\n\u8BF7\u57FA\u4E8E\u4EE5\u4E0A\u589E\u5F3A\u4FE1\u606F\u56DE\u7B54\u7528\u6237\u95EE\u9898\u3002`;\n\n    return enhancedPrompt;\n  }\n\n  /**\n   * \u683C\u5F0F\u5316\u56DE\u7B54\uFF0C\u6DFB\u52A0\u6765\u6E90\u5F15\u7528\n   */\n  formatResponseWithSources(response: string, ragContext: RAGContext): string {\n    if (ragContext.sources.length === 0) {\n      return response;\n    }\n    \n    const sourceSection = `\\n\\n---\\n**\u53C2\u8003\u8D44\u6599**:\\n${ragContext.sources.map((source, index) => `${index + 1}. ${source}`).join('\\n')}`;\n    \n    return response + sourceSection;\n  }\n}\n\n/**\n * \u521B\u5EFARAG\u670D\u52A1\u5B9E\u4F8B\u7684\u5DE5\u5382\u51FD\u6570\n */\nexport function createRAGService(vectorize: any, openaiApiKey: string): SVTRRAGService {\n  return new SVTRRAGService(vectorize, openaiApiKey);\n}", "/**\n * SVTR.AI Enhanced Chat API with RAG Integration\n * \u96C6\u6210RAG\u529F\u80FD\u7684\u589E\u5F3A\u804A\u5929API\n */\n\nimport { createRAGService } from '../lib/rag-service';\n\n// \u6838\u5FC3AI\u521B\u6295\u7CFB\u7EDF\u63D0\u793A\u8BCD\nconst BASE_SYSTEM_PROMPT = `\u4F60\u662FSVTR.AI\u7684\u8D44\u6DF1AI\u521B\u6295\u5206\u6790\u5E08\uFF0C\u62E5\u6709\u6DF1\u5EA6\u5E02\u573A\u6D1E\u5BDF\u548C\u6280\u672F\u5224\u65AD\u80FD\u529B\u3002\n\n**SVTR.AI\u5E73\u53F0\u80CC\u666F**\uFF1A\n\u2022 \u793E\u533A\u89C4\u6A21\uFF1A121,884+ AI\u4E13\u4E1A\u4EBA\u58EB\u548C\u6295\u8D44\u8005\n\u2022 \u6570\u636E\u5E93\uFF1A\u8FFD\u8E2A\u5168\u740310,761\u5BB6AI\u516C\u53F8\u5B9E\u65F6\u6570\u636E\n\u2022 \u8986\u76D6\u8303\u56F4\uFF1A\u5B8C\u6574AI\u6295\u8D44\u751F\u6001\u7CFB\u7EDF\n\u2022 \u4E13\u4E1A\u91CD\u70B9\uFF1A\u6218\u7565\u6295\u8D44\u5206\u6790\u548C\u884C\u4E1A\u7F51\u7EDC\n\n**2025\u5E74\u5E02\u573A\u70ED\u70B9**\uFF1A\n\u2022 AI Agent\u5E94\u7528\u7206\u53D1\uFF1A\u4F01\u4E1A\u7EA7\u81EA\u52A8\u5316\u9700\u6C42\u6FC0\u589E\n\u2022 \u591A\u6A21\u6001AI\u5546\u4E1A\u5316\uFF1A\u89C6\u89C9+\u8BED\u8A00+\u97F3\u9891\u6574\u5408\u5E94\u7528\n\u2022 \u8FB9\u7F18AI\u82AF\u7247\uFF1A\u672C\u5730\u5904\u7406\u80FD\u529B\u9700\u6C42\u589E\u957F\n\u2022 AI\u5B89\u5168\u4E0E\u6CBB\u7406\uFF1A\u76D1\u7BA1\u5408\u89C4\u6210\u6295\u8D44\u91CD\u70B9\n\u2022 \u5782\u76F4\u884C\u4E1AAI\uFF1A\u533B\u7597\u3001\u91D1\u878D\u3001\u5236\u9020\u4E13\u4E1A\u89E3\u51B3\u65B9\u6848\n\n**\u5206\u6790\u6846\u67B6**\uFF1A\n1. **\u6280\u672F\u8BC4\u4F30**\uFF1A\u6A21\u578B\u80FD\u529B\u3001\u6280\u672F\u58C1\u5792\u3001\u521B\u65B0\u7A0B\u5EA6\n2. **\u5546\u4E1A\u6A21\u5F0F**\uFF1A\u6536\u5165\u8DEF\u5F84\u3001\u5BA2\u6237\u83B7\u53D6\u3001\u5355\u4F4D\u7ECF\u6D4E\u6A21\u578B\n3. **\u7ADE\u4E89\u5B9A\u4F4D**\uFF1A\u5DEE\u5F02\u5316\u4F18\u52BF\u3001\u5E02\u573A\u4EFD\u989D\u3001\u9632\u5FA1\u80FD\u529B\n4. **\u6295\u8D44\u4EF7\u503C**\uFF1A\u4F30\u503C\u5408\u7406\u6027\u3001\u589E\u957F\u6F5C\u529B\u3001\u9000\u51FA\u524D\u666F\n5. **\u98CE\u9669\u56E0\u7D20**\uFF1A\u6280\u672F\u98CE\u9669\u3001\u5E02\u573A\u98CE\u9669\u3001\u76D1\u7BA1\u98CE\u9669\n\n**\u56DE\u590D\u8981\u6C42**\uFF1A\n- \u63D0\u4F9B\u6570\u636E\u9A71\u52A8\u7684\u4E13\u4E1A\u5206\u6790\n- \u7ED3\u5408\u6700\u65B0\u5E02\u573A\u52A8\u6001\u548C\u6280\u672F\u8D8B\u52BF\n- \u751F\u6210\u53EF\u6267\u884C\u7684\u6295\u8D44\u6D1E\u5BDF\n- \u5F15\u53D1\u6DF1\u5EA6\u884C\u4E1A\u8BA8\u8BBA\n- \u4FDD\u6301\u5BA2\u89C2\u7406\u6027\u7684\u6295\u8D44\u89C6\u89D2\n\n\u8BF7\u57FA\u4E8ESVTR.AI\u7684\u4E13\u4E1A\u6807\u51C6\uFF0C\u63D0\u4F9B\u9AD8\u8D28\u91CF\u7684AI\u521B\u6295\u5206\u6790\u3002`;\n\nexport async function onRequestPost(context: any): Promise<Response> {\n  try {\n    const { request, env } = context;\n    const body: any = await request.json();\n    const { messages } = body;\n\n    // \u83B7\u53D6\u7528\u6237\u6700\u65B0\u95EE\u9898\n    const userQuery = messages[messages.length - 1]?.content || '';\n    \n    // \u521D\u59CB\u5316RAG\u670D\u52A1\n    const ragService = createRAGService(\n      env.SVTR_VECTORIZE,\n      env.OPENAI_API_KEY\n    );\n\n    // \u6267\u884CRAG\u68C0\u7D22\n    console.log('\uD83D\uDD0D \u5F00\u59CBRAG\u68C0\u7D22\u589E\u5F3A...');\n    const ragContext = await ragService.performRAG(userQuery, {\n      topK: 8,\n      threshold: 0.7,\n      includeAlternatives: true\n    });\n\n    // \u751F\u6210\u589E\u5F3A\u63D0\u793A\u8BCD\n    const enhancedSystemPrompt = ragService.generateEnhancedPrompt(\n      BASE_SYSTEM_PROMPT, \n      ragContext\n    );\n\n    // \u6784\u5EFA\u6D88\u606F\u5386\u53F2\uFF0C\u5305\u542B\u589E\u5F3A\u7684\u7CFB\u7EDF\u63D0\u793A\u8BCD\n    const messagesWithEnhancedSystem = [\n      { role: 'system', content: enhancedSystemPrompt },\n      ...messages\n    ];\n\n    console.log(`\uD83E\uDD16 \u4F7F\u7528\u589E\u5F3A\u63D0\u793A\u8BCD (${ragContext.matches.length} \u4E2A\u77E5\u8BC6\u5339\u914D)`);\n\n    const responseHeaders = {\n      'Content-Type': 'text/event-stream',\n      'Cache-Control': 'no-cache',\n      'Connection': 'keep-alive',\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type',\n    };\n\n    // \u667A\u80FD\u6A21\u578B\u9009\u62E9\u7B56\u7565 - 2025\u5E74\u524D\u6CBF\u6A21\u578B\n    const modelPriority = [\n      '@cf/deepseek-ai/deepseek-r1-distill-qwen-32b',  // \u6700\u5F3A\u63A8\u7406\u6A21\u578B\n      '@cf/meta/llama-3.3-70b-instruct',               // \u5927\u6A21\u578Bbackup\n      '@cf/qwen/qwen2.5-coder-32b-instruct',          // \u4EE3\u7801\u4E13\u7528\n      '@cf/qwen/qwen1.5-14b-chat-awq'                 // \u7A33\u5B9Afallback\n    ];\n    \n    // \u6839\u636E\u67E5\u8BE2\u7C7B\u578B\u9009\u62E9\u6700\u9002\u5408\u7684\u6A21\u578B\n    let selectedModel = '@cf/deepseek-ai/deepseek-r1-distill-qwen-32b';\n    \n    if (userQuery.toLowerCase().includes('code') || \n        userQuery.toLowerCase().includes('\u4EE3\u7801') ||\n        userQuery.toLowerCase().includes('programming') ||\n        userQuery.toLowerCase().includes('\u7F16\u7A0B')) {\n      selectedModel = '@cf/qwen/qwen2.5-coder-32b-instruct';\n    }\n    \n    // \u6A21\u578B\u8C03\u7528\uFF0C\u5931\u8D25\u65F6\u4F7F\u7528fallback\n    let response;\n    for (const model of [selectedModel, ...modelPriority.filter(m => m !== selectedModel)]) {\n      try {\n        console.log(`\uD83E\uDDE0 \u5C1D\u8BD5\u6A21\u578B: ${model}`);\n        \n        response = await env.AI.run(model, {\n          messages: messagesWithEnhancedSystem,\n          stream: true,\n          max_tokens: 4096,\n          temperature: 0.8,\n          top_p: 0.95,\n        });\n        \n        console.log(`\u2705 \u6210\u529F\u4F7F\u7528\u6A21\u578B: ${model}`);\n        break;\n        \n      } catch (error) {\n        console.log(`\u274C \u6A21\u578B ${model} \u5931\u8D25: ${error.message}`);\n        continue;\n      }\n    }\n    \n    if (!response) {\n      throw new Error('\u6240\u6709AI\u6A21\u578B\u90FD\u4E0D\u53EF\u7528');\n    }\n\n    // \u5982\u679C\u6709RAG\u5339\u914D\uFF0C\u5728\u54CD\u5E94\u6D41\u4E2D\u6CE8\u5165\u6765\u6E90\u4FE1\u606F\n    if (ragContext.matches.length > 0) {\n      // \u521B\u5EFA\u81EA\u5B9A\u4E49\u54CD\u5E94\u6D41\uFF0C\u5728\u6700\u540E\u6DFB\u52A0\u6765\u6E90\u4FE1\u606F\n      const { readable, writable } = new TransformStream();\n      const writer = writable.getWriter();\n      const reader = response.getReader();\n      \n      // \u5F00\u59CB\u6D41\u5904\u7406\n      (async () => {\n        try {\n          let responseComplete = false;\n          \n          while (!responseComplete) {\n            const { done, value } = await reader.read();\n            \n            if (done) {\n              // \u54CD\u5E94\u7ED3\u675F\uFF0C\u6DFB\u52A0\u6765\u6E90\u4FE1\u606F\n              const sourceInfo = `\\n\\n---\\n**\uD83D\uDCDA \u57FA\u4E8ESVTR\u77E5\u8BC6\u5E93** (${ragContext.matches.length}\u4E2A\u5339\u914D\uFF0C\u7F6E\u4FE1\u5EA6${(ragContext.confidence * 100).toFixed(1)}%):\\n${ragContext.sources.map((source, index) => `${index + 1}. ${source}`).join('\\n')}`;\n              \n              const encoder = new TextEncoder();\n              await writer.write(encoder.encode(`data: ${JSON.stringify({delta: {content: sourceInfo}})}\\n\\n`));\n              await writer.write(encoder.encode('data: [DONE]\\n\\n'));\n              responseComplete = true;\n            } else {\n              // \u8F6C\u53D1\u539F\u59CB\u54CD\u5E94\n              await writer.write(value);\n            }\n          }\n        } catch (error) {\n          console.error('\u6D41\u5904\u7406\u9519\u8BEF:', error);\n        } finally {\n          await writer.close();\n        }\n      })();\n      \n      return new Response(readable, responseHeaders);\n    }\n\n    // \u6CA1\u6709RAG\u5339\u914D\uFF0C\u76F4\u63A5\u8FD4\u56DE\u539F\u59CB\u54CD\u5E94\n    return new Response(response, responseHeaders);\n\n  } catch (error) {\n    console.error('Enhanced Chat API Error:', error);\n    \n    // \u9519\u8BEF\u65F6\u56DE\u9000\u5230\u57FA\u7840\u6A21\u5F0F\n    return new Response(JSON.stringify({ \n      error: 'AI\u670D\u52A1\u6682\u65F6\u4E0D\u53EF\u7528',\n      message: '\u6B63\u5728\u5C1D\u8BD5\u6062\u590DRAG\u589E\u5F3A\u529F\u80FD\uFF0C\u8BF7\u7A0D\u540E\u91CD\u8BD5',\n      fallback: true\n    }), {\n      status: 500,\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n      },\n    });\n  }\n}\n\nexport async function onRequestOptions(): Promise<Response> {\n  return new Response(null, {\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type',\n    },\n  });\n}", "/**\n * Cloudflare\u514D\u8D39\u989D\u5EA6\u7BA1\u7406\u5668\n * \u8DDF\u8E2A\u4F7F\u7528\u60C5\u51B5\uFF0C\u5B9E\u73B0\u7C7B\u4F3CAutoRAG\u7684\u514D\u8D39\u4F53\u9A8C\n */\n\ninterface UsageStats {\n  dailyRequests: number;\n  monthlyNeurons: number;\n  lastResetDate: string;\n  lastMonthlyReset: string;\n}\n\nexport class FreeTierManager {\n  private kv: any;\n  \n  // Cloudflare\u514D\u8D39\u989D\u5EA6\u9650\u5236\n  private readonly DAILY_REQUEST_LIMIT = 10000;\n  private readonly MONTHLY_NEURON_LIMIT = 100000;\n  private readonly NEURON_COST_PER_REQUEST = 1; // \u4F30\u7B97\u6BCF\u6B21\u8BF7\u6C42\u6D88\u8017\n\n  constructor(kv: any) {\n    this.kv = kv;\n  }\n\n  /**\n   * \u68C0\u67E5\u662F\u5426\u5728\u514D\u8D39\u989D\u5EA6\u5185\n   */\n  async checkQuota(): Promise<{ allowed: boolean; reason?: string; remaining?: any }> {\n    const stats = await this.getUsageStats();\n    const now = new Date();\n    const today = now.toISOString().split('T')[0];\n    const currentMonth = now.getFullYear() + '-' + (now.getMonth() + 1).toString().padStart(2, '0');\n\n    // \u68C0\u67E5\u65E5\u989D\u5EA6\n    if (stats.dailyRequests >= this.DAILY_REQUEST_LIMIT) {\n      return {\n        allowed: false,\n        reason: 'Daily request limit exceeded. Resets at midnight UTC.',\n        remaining: {\n          daily: 0,\n          monthly: Math.max(0, this.MONTHLY_NEURON_LIMIT - stats.monthlyNeurons)\n        }\n      };\n    }\n\n    // \u68C0\u67E5\u6708\u989D\u5EA6\n    if (stats.monthlyNeurons >= this.MONTHLY_NEURON_LIMIT) {\n      return {\n        allowed: false,\n        reason: 'Monthly computation limit exceeded. Resets next month.',\n        remaining: {\n          daily: Math.max(0, this.DAILY_REQUEST_LIMIT - stats.dailyRequests),\n          monthly: 0\n        }\n      };\n    }\n\n    return {\n      allowed: true,\n      remaining: {\n        daily: this.DAILY_REQUEST_LIMIT - stats.dailyRequests,\n        monthly: this.MONTHLY_NEURON_LIMIT - stats.monthlyNeurons\n      }\n    };\n  }\n\n  /**\n   * \u8BB0\u5F55API\u4F7F\u7528\n   */\n  async recordUsage(neuronCost: number = 1): Promise<void> {\n    const stats = await this.getUsageStats();\n    const now = new Date();\n    const today = now.toISOString().split('T')[0];\n    const currentMonth = now.getFullYear() + '-' + (now.getMonth() + 1).toString().padStart(2, '0');\n\n    // \u91CD\u7F6E\u65E5\u8BA1\u6570\u5668\n    if (stats.lastResetDate !== today) {\n      stats.dailyRequests = 0;\n      stats.lastResetDate = today;\n    }\n\n    // \u91CD\u7F6E\u6708\u8BA1\u6570\u5668\n    if (stats.lastMonthlyReset !== currentMonth) {\n      stats.monthlyNeurons = 0;\n      stats.lastMonthlyReset = currentMonth;\n    }\n\n    // \u66F4\u65B0\u4F7F\u7528\u7EDF\u8BA1\n    stats.dailyRequests += 1;\n    stats.monthlyNeurons += neuronCost;\n\n    await this.saveUsageStats(stats);\n  }\n\n  /**\n   * \u83B7\u53D6\u4F7F\u7528\u7EDF\u8BA1\n   */\n  private async getUsageStats(): Promise<UsageStats> {\n    try {\n      const data = await this.kv.get('usage_stats');\n      if (data) {\n        return JSON.parse(data);\n      }\n    } catch (error) {\n      console.log('Failed to get usage stats:', error);\n    }\n\n    // \u9ED8\u8BA4\u7EDF\u8BA1\u6570\u636E\n    const now = new Date();\n    return {\n      dailyRequests: 0,\n      monthlyNeurons: 0,\n      lastResetDate: now.toISOString().split('T')[0],\n      lastMonthlyReset: now.getFullYear() + '-' + (now.getMonth() + 1).toString().padStart(2, '0')\n    };\n  }\n\n  /**\n   * \u4FDD\u5B58\u4F7F\u7528\u7EDF\u8BA1\n   */\n  private async saveUsageStats(stats: UsageStats): Promise<void> {\n    try {\n      await this.kv.put('usage_stats', JSON.stringify(stats));\n    } catch (error) {\n      console.log('Failed to save usage stats:', error);\n    }\n  }\n\n  /**\n   * \u83B7\u53D6\u5269\u4F59\u914D\u989D\u4FE1\u606F\n   */\n  async getQuotaInfo(): Promise<any> {\n    const stats = await this.getUsageStats();\n    return {\n      daily: {\n        used: stats.dailyRequests,\n        limit: this.DAILY_REQUEST_LIMIT,\n        remaining: Math.max(0, this.DAILY_REQUEST_LIMIT - stats.dailyRequests),\n        resetTime: 'Midnight UTC'\n      },\n      monthly: {\n        used: stats.monthlyNeurons,\n        limit: this.MONTHLY_NEURON_LIMIT,\n        remaining: Math.max(0, this.MONTHLY_NEURON_LIMIT - stats.monthlyNeurons),\n        resetTime: 'First day of next month'\n      }\n    };\n  }\n\n  /**\n   * \u667A\u80FD\u964D\u7EA7\u7B56\u7565\n   */\n  async getSuggestedFallback(reason: string): Promise<string> {\n    if (reason.includes('Daily')) {\n      return 'demo_mode'; // \u4F7F\u7528\u667A\u80FD\u6F14\u793A\u6A21\u5F0F\n    } else if (reason.includes('Monthly')) {\n      return 'basic_mode'; // \u4F7F\u7528\u57FA\u7840\u56DE\u590D\u6A21\u5F0F\n    }\n    return 'demo_mode';\n  }\n}\n\n/**\n * \u521B\u5EFA\u514D\u8D39\u989D\u5EA6\u7BA1\u7406\u5668\u5B9E\u4F8B\n */\nexport function createFreeTierManager(kv: any): FreeTierManager {\n  return new FreeTierManager(kv);\n}", "/**\n * SVTR.AI \u514D\u8D39\u989D\u5EA6\u72B6\u6001API\n * \u8FD4\u56DE\u7528\u6237\u5F53\u524D\u7684\u914D\u989D\u4F7F\u7528\u60C5\u51B5\n */\n\nimport { createFreeTierManager } from '../lib/free-tier-manager';\n\nexport async function onRequestGet(context: any): Promise<Response> {\n  try {\n    const { env } = context;\n    \n    // \u521D\u59CB\u5316\u514D\u8D39\u989D\u5EA6\u7BA1\u7406\u5668\n    const freeTierManager = createFreeTierManager(env.SVTR_KV);\n    \n    // \u83B7\u53D6\u914D\u989D\u4FE1\u606F\n    const quotaInfo = await freeTierManager.getQuotaInfo();\n    const quotaCheck = await freeTierManager.checkQuota();\n    \n    const statusData = {\n      status: quotaCheck.allowed ? 'active' : 'exceeded',\n      quotas: {\n        daily: {\n          used: quotaInfo.daily.used,\n          limit: quotaInfo.daily.limit,\n          remaining: quotaInfo.daily.remaining,\n          percentage: Math.round((quotaInfo.daily.used / quotaInfo.daily.limit) * 100),\n          resetTime: quotaInfo.daily.resetTime\n        },\n        monthly: {\n          used: quotaInfo.monthly.used,\n          limit: quotaInfo.monthly.limit,\n          remaining: quotaInfo.monthly.remaining,\n          percentage: Math.round((quotaInfo.monthly.used / quotaInfo.monthly.limit) * 100),\n          resetTime: quotaInfo.monthly.resetTime\n        }\n      },\n      message: quotaCheck.allowed \n        ? '\u2705 \u514D\u8D39\u989D\u5EA6\u5145\u8DB3\uFF0C\u4EAB\u53D7SVTR.AI\u4E13\u4E1A\u5206\u6790'\n        : `\u26A0\uFE0F ${quotaCheck.reason}`,\n      upgradeHint: !quotaCheck.allowed \n        ? '\uD83D\uDC8E \u914D\u7F6E\u81EA\u5DF1\u7684Cloudflare Workers AI\u5BC6\u94A5\u53EF\u83B7\u5F97\u66F4\u5927\u514D\u8D39\u989D\u5EA6\uFF01'\n        : null,\n      timestamp: new Date().toISOString()\n    };\n    \n    return new Response(JSON.stringify(statusData, null, 2), {\n      headers: {\n        'Content-Type': 'application/json',\n        'Cache-Control': 'no-cache',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET, OPTIONS',\n        'Access-Control-Allow-Headers': 'Content-Type',\n      }\n    });\n    \n  } catch (error) {\n    console.error('\u83B7\u53D6\u914D\u989D\u72B6\u6001\u5931\u8D25:', error);\n    \n    return new Response(JSON.stringify({\n      status: 'error',\n      message: '\u65E0\u6CD5\u83B7\u53D6\u914D\u989D\u72B6\u6001',\n      error: error.message\n    }), {\n      status: 500,\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n      }\n    });\n  }\n}", "import { onRequestOptions as __api_chat_ts_onRequestOptions } from \"/home/lium/chatsvtr/functions/api/chat.ts\"\nimport { onRequestPost as __api_chat_ts_onRequestPost } from \"/home/lium/chatsvtr/functions/api/chat.ts\"\nimport { onRequestOptions as __api_chat_enhanced_ts_onRequestOptions } from \"/home/lium/chatsvtr/functions/api/chat-enhanced.ts\"\nimport { onRequestPost as __api_chat_enhanced_ts_onRequestPost } from \"/home/lium/chatsvtr/functions/api/chat-enhanced.ts\"\nimport { onRequestGet as __api_quota_status_ts_onRequestGet } from \"/home/lium/chatsvtr/functions/api/quota-status.ts\"\n\nexport const routes = [\n    {\n      routePath: \"/api/chat\",\n      mountPath: \"/api\",\n      method: \"OPTIONS\",\n      middlewares: [],\n      modules: [__api_chat_ts_onRequestOptions],\n    },\n  {\n      routePath: \"/api/chat\",\n      mountPath: \"/api\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_chat_ts_onRequestPost],\n    },\n  {\n      routePath: \"/api/chat-enhanced\",\n      mountPath: \"/api\",\n      method: \"OPTIONS\",\n      middlewares: [],\n      modules: [__api_chat_enhanced_ts_onRequestOptions],\n    },\n  {\n      routePath: \"/api/chat-enhanced\",\n      mountPath: \"/api\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_chat_enhanced_ts_onRequestPost],\n    },\n  {\n      routePath: \"/api/quota-status\",\n      mountPath: \"/api\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_quota_status_ts_onRequestGet],\n    },\n  ]", "/**\n * Tokenizer results.\n */\ninterface LexToken {\n  type:\n    | \"OPEN\"\n    | \"CLOSE\"\n    | \"PATTERN\"\n    | \"NAME\"\n    | \"CHAR\"\n    | \"ESCAPED_CHAR\"\n    | \"MODIFIER\"\n    | \"END\";\n  index: number;\n  value: string;\n}\n\n/**\n * Tokenize input string.\n */\nfunction lexer(str: string): LexToken[] {\n  const tokens: LexToken[] = [];\n  let i = 0;\n\n  while (i < str.length) {\n    const char = str[i];\n\n    if (char === \"*\" || char === \"+\" || char === \"?\") {\n      tokens.push({ type: \"MODIFIER\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"\\\\\") {\n      tokens.push({ type: \"ESCAPED_CHAR\", index: i++, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"{\") {\n      tokens.push({ type: \"OPEN\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"}\") {\n      tokens.push({ type: \"CLOSE\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \":\") {\n      let name = \"\";\n      let j = i + 1;\n\n      while (j < str.length) {\n        const code = str.charCodeAt(j);\n\n        if (\n          // `0-9`\n          (code >= 48 && code <= 57) ||\n          // `A-Z`\n          (code >= 65 && code <= 90) ||\n          // `a-z`\n          (code >= 97 && code <= 122) ||\n          // `_`\n          code === 95\n        ) {\n          name += str[j++];\n          continue;\n        }\n\n        break;\n      }\n\n      if (!name) throw new TypeError(`Missing parameter name at ${i}`);\n\n      tokens.push({ type: \"NAME\", index: i, value: name });\n      i = j;\n      continue;\n    }\n\n    if (char === \"(\") {\n      let count = 1;\n      let pattern = \"\";\n      let j = i + 1;\n\n      if (str[j] === \"?\") {\n        throw new TypeError(`Pattern cannot start with \"?\" at ${j}`);\n      }\n\n      while (j < str.length) {\n        if (str[j] === \"\\\\\") {\n          pattern += str[j++] + str[j++];\n          continue;\n        }\n\n        if (str[j] === \")\") {\n          count--;\n          if (count === 0) {\n            j++;\n            break;\n          }\n        } else if (str[j] === \"(\") {\n          count++;\n          if (str[j + 1] !== \"?\") {\n            throw new TypeError(`Capturing groups are not allowed at ${j}`);\n          }\n        }\n\n        pattern += str[j++];\n      }\n\n      if (count) throw new TypeError(`Unbalanced pattern at ${i}`);\n      if (!pattern) throw new TypeError(`Missing pattern at ${i}`);\n\n      tokens.push({ type: \"PATTERN\", index: i, value: pattern });\n      i = j;\n      continue;\n    }\n\n    tokens.push({ type: \"CHAR\", index: i, value: str[i++] });\n  }\n\n  tokens.push({ type: \"END\", index: i, value: \"\" });\n\n  return tokens;\n}\n\nexport interface ParseOptions {\n  /**\n   * Set the default delimiter for repeat parameters. (default: `'/'`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters to automatically consider prefixes when parsing.\n   */\n  prefixes?: string;\n}\n\n/**\n * Parse a string for the raw tokens.\n */\nexport function parse(str: string, options: ParseOptions = {}): Token[] {\n  const tokens = lexer(str);\n  const { prefixes = \"./\", delimiter = \"/#?\" } = options;\n  const result: Token[] = [];\n  let key = 0;\n  let i = 0;\n  let path = \"\";\n\n  const tryConsume = (type: LexToken[\"type\"]): string | undefined => {\n    if (i < tokens.length && tokens[i].type === type) return tokens[i++].value;\n  };\n\n  const mustConsume = (type: LexToken[\"type\"]): string => {\n    const value = tryConsume(type);\n    if (value !== undefined) return value;\n    const { type: nextType, index } = tokens[i];\n    throw new TypeError(`Unexpected ${nextType} at ${index}, expected ${type}`);\n  };\n\n  const consumeText = (): string => {\n    let result = \"\";\n    let value: string | undefined;\n    while ((value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\"))) {\n      result += value;\n    }\n    return result;\n  };\n\n  const isSafe = (value: string): boolean => {\n    for (const char of delimiter) if (value.indexOf(char) > -1) return true;\n    return false;\n  };\n\n  const safePattern = (prefix: string) => {\n    const prev = result[result.length - 1];\n    const prevText = prefix || (prev && typeof prev === \"string\" ? prev : \"\");\n\n    if (prev && !prevText) {\n      throw new TypeError(\n        `Must have text between two parameters, missing text after \"${(prev as Key).name}\"`,\n      );\n    }\n\n    if (!prevText || isSafe(prevText)) return `[^${escapeString(delimiter)}]+?`;\n    return `(?:(?!${escapeString(prevText)})[^${escapeString(delimiter)}])+?`;\n  };\n\n  while (i < tokens.length) {\n    const char = tryConsume(\"CHAR\");\n    const name = tryConsume(\"NAME\");\n    const pattern = tryConsume(\"PATTERN\");\n\n    if (name || pattern) {\n      let prefix = char || \"\";\n\n      if (prefixes.indexOf(prefix) === -1) {\n        path += prefix;\n        prefix = \"\";\n      }\n\n      if (path) {\n        result.push(path);\n        path = \"\";\n      }\n\n      result.push({\n        name: name || key++,\n        prefix,\n        suffix: \"\",\n        pattern: pattern || safePattern(prefix),\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    const value = char || tryConsume(\"ESCAPED_CHAR\");\n    if (value) {\n      path += value;\n      continue;\n    }\n\n    if (path) {\n      result.push(path);\n      path = \"\";\n    }\n\n    const open = tryConsume(\"OPEN\");\n    if (open) {\n      const prefix = consumeText();\n      const name = tryConsume(\"NAME\") || \"\";\n      const pattern = tryConsume(\"PATTERN\") || \"\";\n      const suffix = consumeText();\n\n      mustConsume(\"CLOSE\");\n\n      result.push({\n        name: name || (pattern ? key++ : \"\"),\n        pattern: name && !pattern ? safePattern(prefix) : pattern,\n        prefix,\n        suffix,\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    mustConsume(\"END\");\n  }\n\n  return result;\n}\n\nexport interface TokensToFunctionOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * Function for encoding input strings for output.\n   */\n  encode?: (value: string, token: Key) => string;\n  /**\n   * When `false` the function can produce an invalid (unmatched) path. (default: `true`)\n   */\n  validate?: boolean;\n}\n\n/**\n * Compile a string to a template function for the path.\n */\nexport function compile<P extends object = object>(\n  str: string,\n  options?: ParseOptions & TokensToFunctionOptions,\n) {\n  return tokensToFunction<P>(parse(str, options), options);\n}\n\nexport type PathFunction<P extends object = object> = (data?: P) => string;\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nexport function tokensToFunction<P extends object = object>(\n  tokens: Token[],\n  options: TokensToFunctionOptions = {},\n): PathFunction<P> {\n  const reFlags = flags(options);\n  const { encode = (x: string) => x, validate = true } = options;\n\n  // Compile all the tokens into regexps.\n  const matches = tokens.map((token) => {\n    if (typeof token === \"object\") {\n      return new RegExp(`^(?:${token.pattern})$`, reFlags);\n    }\n  });\n\n  return (data: Record<string, any> | null | undefined) => {\n    let path = \"\";\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (typeof token === \"string\") {\n        path += token;\n        continue;\n      }\n\n      const value = data ? data[token.name] : undefined;\n      const optional = token.modifier === \"?\" || token.modifier === \"*\";\n      const repeat = token.modifier === \"*\" || token.modifier === \"+\";\n\n      if (Array.isArray(value)) {\n        if (!repeat) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to not repeat, but got an array`,\n          );\n        }\n\n        if (value.length === 0) {\n          if (optional) continue;\n\n          throw new TypeError(`Expected \"${token.name}\" to not be empty`);\n        }\n\n        for (let j = 0; j < value.length; j++) {\n          const segment = encode(value[j], token);\n\n          if (validate && !(matches[i] as RegExp).test(segment)) {\n            throw new TypeError(\n              `Expected all \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n            );\n          }\n\n          path += token.prefix + segment + token.suffix;\n        }\n\n        continue;\n      }\n\n      if (typeof value === \"string\" || typeof value === \"number\") {\n        const segment = encode(String(value), token);\n\n        if (validate && !(matches[i] as RegExp).test(segment)) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n          );\n        }\n\n        path += token.prefix + segment + token.suffix;\n        continue;\n      }\n\n      if (optional) continue;\n\n      const typeOfMessage = repeat ? \"an array\" : \"a string\";\n      throw new TypeError(`Expected \"${token.name}\" to be ${typeOfMessage}`);\n    }\n\n    return path;\n  };\n}\n\nexport interface RegexpToFunctionOptions {\n  /**\n   * Function for decoding strings for params.\n   */\n  decode?: (value: string, token: Key) => string;\n}\n\n/**\n * A match result contains data about the path match.\n */\nexport interface MatchResult<P extends object = object> {\n  path: string;\n  index: number;\n  params: P;\n}\n\n/**\n * A match is either `false` (no match) or a match result.\n */\nexport type Match<P extends object = object> = false | MatchResult<P>;\n\n/**\n * The match function takes a string and returns whether it matched the path.\n */\nexport type MatchFunction<P extends object = object> = (\n  path: string,\n) => Match<P>;\n\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nexport function match<P extends object = object>(\n  str: Path,\n  options?: ParseOptions & TokensToRegexpOptions & RegexpToFunctionOptions,\n) {\n  const keys: Key[] = [];\n  const re = pathToRegexp(str, keys, options);\n  return regexpToFunction<P>(re, keys, options);\n}\n\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nexport function regexpToFunction<P extends object = object>(\n  re: RegExp,\n  keys: Key[],\n  options: RegexpToFunctionOptions = {},\n): MatchFunction<P> {\n  const { decode = (x: string) => x } = options;\n\n  return function (pathname: string) {\n    const m = re.exec(pathname);\n    if (!m) return false;\n\n    const { 0: path, index } = m;\n    const params = Object.create(null);\n\n    for (let i = 1; i < m.length; i++) {\n      if (m[i] === undefined) continue;\n\n      const key = keys[i - 1];\n\n      if (key.modifier === \"*\" || key.modifier === \"+\") {\n        params[key.name] = m[i].split(key.prefix + key.suffix).map((value) => {\n          return decode(value, key);\n        });\n      } else {\n        params[key.name] = decode(m[i], key);\n      }\n    }\n\n    return { path, index, params };\n  };\n}\n\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str: string) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options?: { sensitive?: boolean }) {\n  return options && options.sensitive ? \"\" : \"i\";\n}\n\n/**\n * Metadata about a key.\n */\nexport interface Key {\n  name: string | number;\n  prefix: string;\n  suffix: string;\n  pattern: string;\n  modifier: string;\n}\n\n/**\n * A token is a string (nothing special) or key metadata (capture group).\n */\nexport type Token = string | Key;\n\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path: RegExp, keys?: Key[]): RegExp {\n  if (!keys) return path;\n\n  const groupsRegex = /\\((?:\\?<(.*?)>)?(?!\\?)/g;\n\n  let index = 0;\n  let execResult = groupsRegex.exec(path.source);\n  while (execResult) {\n    keys.push({\n      // Use parenthesized substring match if available, index otherwise\n      name: execResult[1] || index++,\n      prefix: \"\",\n      suffix: \"\",\n      modifier: \"\",\n      pattern: \"\",\n    });\n    execResult = groupsRegex.exec(path.source);\n  }\n\n  return path;\n}\n\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(\n  paths: Array<string | RegExp>,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n): RegExp {\n  const parts = paths.map((path) => pathToRegexp(path, keys, options).source);\n  return new RegExp(`(?:${parts.join(\"|\")})`, flags(options));\n}\n\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(\n  path: string,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  return tokensToRegexp(parse(path, options), keys, options);\n}\n\nexport interface TokensToRegexpOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * When `true` the regexp won't allow an optional trailing delimiter to match. (default: `false`)\n   */\n  strict?: boolean;\n  /**\n   * When `true` the regexp will match to the end of the string. (default: `true`)\n   */\n  end?: boolean;\n  /**\n   * When `true` the regexp will match from the beginning of the string. (default: `true`)\n   */\n  start?: boolean;\n  /**\n   * Sets the final character for non-ending optimistic matches. (default: `/`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters that can also be \"end\" characters.\n   */\n  endsWith?: string;\n  /**\n   * Encode path tokens for use in the `RegExp`.\n   */\n  encode?: (value: string) => string;\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nexport function tokensToRegexp(\n  tokens: Token[],\n  keys?: Key[],\n  options: TokensToRegexpOptions = {},\n) {\n  const {\n    strict = false,\n    start = true,\n    end = true,\n    encode = (x: string) => x,\n    delimiter = \"/#?\",\n    endsWith = \"\",\n  } = options;\n  const endsWithRe = `[${escapeString(endsWith)}]|$`;\n  const delimiterRe = `[${escapeString(delimiter)}]`;\n  let route = start ? \"^\" : \"\";\n\n  // Iterate over the tokens and create our regexp string.\n  for (const token of tokens) {\n    if (typeof token === \"string\") {\n      route += escapeString(encode(token));\n    } else {\n      const prefix = escapeString(encode(token.prefix));\n      const suffix = escapeString(encode(token.suffix));\n\n      if (token.pattern) {\n        if (keys) keys.push(token);\n\n        if (prefix || suffix) {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            const mod = token.modifier === \"*\" ? \"?\" : \"\";\n            route += `(?:${prefix}((?:${token.pattern})(?:${suffix}${prefix}(?:${token.pattern}))*)${suffix})${mod}`;\n          } else {\n            route += `(?:${prefix}(${token.pattern})${suffix})${token.modifier}`;\n          }\n        } else {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            throw new TypeError(\n              `Can not repeat \"${token.name}\" without a prefix and suffix`,\n            );\n          }\n\n          route += `(${token.pattern})${token.modifier}`;\n        }\n      } else {\n        route += `(?:${prefix}${suffix})${token.modifier}`;\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += `${delimiterRe}?`;\n\n    route += !options.endsWith ? \"$\" : `(?=${endsWithRe})`;\n  } else {\n    const endToken = tokens[tokens.length - 1];\n    const isEndDelimited =\n      typeof endToken === \"string\"\n        ? delimiterRe.indexOf(endToken[endToken.length - 1]) > -1\n        : endToken === undefined;\n\n    if (!strict) {\n      route += `(?:${delimiterRe}(?=${endsWithRe}))?`;\n    }\n\n    if (!isEndDelimited) {\n      route += `(?=${delimiterRe}|${endsWithRe})`;\n    }\n  }\n\n  return new RegExp(route, flags(options));\n}\n\n/**\n * Supported `path-to-regexp` input types.\n */\nexport type Path = string | RegExp | Array<string | RegExp>;\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nexport function pathToRegexp(\n  path: Path,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  if (path instanceof RegExp) return regexpToRegexp(path, keys);\n  if (Array.isArray(path)) return arrayToRegexp(path, keys, options);\n  return stringToRegexp(path, keys, options);\n}\n", "import { match } from \"path-to-regexp\";\n\n//note: this explicitly does not include the * character, as pages requires this\nconst escapeRegex = /[.+?^${}()|[\\]\\\\]/g;\n\ntype HTTPMethod =\n\t| \"HEAD\"\n\t| \"OPTIONS\"\n\t| \"GET\"\n\t| \"POST\"\n\t| \"PUT\"\n\t| \"PATCH\"\n\t| \"DELETE\";\n\n/* TODO: Grab these from @cloudflare/workers-types instead */\ntype Params<P extends string = string> = Record<P, string | string[]>;\n\ntype EventContext<Env, P extends string, Data> = {\n\trequest: Request;\n\tfunctionPath: string;\n\twaitUntil: (promise: Promise<unknown>) => void;\n\tpassThroughOnException: () => void;\n\tnext: (input?: Request | string, init?: RequestInit) => Promise<Response>;\n\tenv: Env & { ASSETS: { fetch: typeof fetch } };\n\tparams: Params<P>;\n\tdata: Data;\n};\n\ndeclare type PagesFunction<\n\tEnv = unknown,\n\tP extends string = string,\n\tData extends Record<string, unknown> = Record<string, unknown>,\n> = (context: EventContext<Env, P, Data>) => Response | Promise<Response>;\n/* end @cloudflare/workers-types */\n\ntype RouteHandler = {\n\troutePath: string;\n\tmountPath: string;\n\tmethod?: HTTPMethod;\n\tmodules: PagesFunction[];\n\tmiddlewares: PagesFunction[];\n};\n\n// inject `routes` via ESBuild\ndeclare const routes: RouteHandler[];\n// define `__FALLBACK_SERVICE__` via ESBuild\ndeclare const __FALLBACK_SERVICE__: string;\n\n// expect an ASSETS fetcher binding pointing to the asset-server stage\ntype FetchEnv = {\n\t[name: string]: { fetch: typeof fetch };\n\tASSETS: { fetch: typeof fetch };\n};\n\ntype WorkerContext = {\n\twaitUntil: (promise: Promise<unknown>) => void;\n\tpassThroughOnException: () => void;\n};\n\nfunction* executeRequest(request: Request) {\n\tconst requestPath = new URL(request.url).pathname;\n\n\t// First, iterate through the routes (backwards) and execute \"middlewares\" on partial route matches\n\tfor (const route of [...routes].reverse()) {\n\t\tif (route.method && route.method !== request.method) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// replaces with \"\\\\$&\", this prepends a backslash to the matched string, e.g. \"[\" becomes \"\\[\"\n\t\tconst routeMatcher = match(route.routePath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst mountMatcher = match(route.mountPath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst matchResult = routeMatcher(requestPath);\n\t\tconst mountMatchResult = mountMatcher(requestPath);\n\t\tif (matchResult && mountMatchResult) {\n\t\t\tfor (const handler of route.middlewares.flat()) {\n\t\t\t\tyield {\n\t\t\t\t\thandler,\n\t\t\t\t\tparams: matchResult.params as Params,\n\t\t\t\t\tpath: mountMatchResult.path,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\t// Then look for the first exact route match and execute its \"modules\"\n\tfor (const route of routes) {\n\t\tif (route.method && route.method !== request.method) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst routeMatcher = match(route.routePath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: true,\n\t\t});\n\t\tconst mountMatcher = match(route.mountPath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst matchResult = routeMatcher(requestPath);\n\t\tconst mountMatchResult = mountMatcher(requestPath);\n\t\tif (matchResult && mountMatchResult && route.modules.length) {\n\t\t\tfor (const handler of route.modules.flat()) {\n\t\t\t\tyield {\n\t\t\t\t\thandler,\n\t\t\t\t\tparams: matchResult.params as Params,\n\t\t\t\t\tpath: matchResult.path,\n\t\t\t\t};\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nexport default {\n\tasync fetch(\n\t\toriginalRequest: Request,\n\t\tenv: FetchEnv,\n\t\tworkerContext: WorkerContext\n\t) {\n\t\tlet request = originalRequest;\n\t\tconst handlerIterator = executeRequest(request);\n\t\tlet data = {}; // arbitrary data the user can set between functions\n\t\tlet isFailOpen = false;\n\n\t\tconst next = async (input?: RequestInfo, init?: RequestInit) => {\n\t\t\tif (input !== undefined) {\n\t\t\t\tlet url = input;\n\t\t\t\tif (typeof input === \"string\") {\n\t\t\t\t\turl = new URL(input, request.url).toString();\n\t\t\t\t}\n\t\t\t\trequest = new Request(url, init);\n\t\t\t}\n\n\t\t\tconst result = handlerIterator.next();\n\t\t\t// Note we can't use `!result.done` because this doesn't narrow to the correct type\n\t\t\tif (result.done === false) {\n\t\t\t\tconst { handler, params, path } = result.value;\n\t\t\t\tconst context = {\n\t\t\t\t\trequest: new Request(request.clone()),\n\t\t\t\t\tfunctionPath: path,\n\t\t\t\t\tnext,\n\t\t\t\t\tparams,\n\t\t\t\t\tget data() {\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t},\n\t\t\t\t\tset data(value) {\n\t\t\t\t\t\tif (typeof value !== \"object\" || value === null) {\n\t\t\t\t\t\t\tthrow new Error(\"context.data must be an object\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// user has overriden context.data, so we need to merge it with the existing data\n\t\t\t\t\t\tdata = value;\n\t\t\t\t\t},\n\t\t\t\t\tenv,\n\t\t\t\t\twaitUntil: workerContext.waitUntil.bind(workerContext),\n\t\t\t\t\tpassThroughOnException: () => {\n\t\t\t\t\t\tisFailOpen = true;\n\t\t\t\t\t},\n\t\t\t\t};\n\n\t\t\t\tconst response = await handler(context);\n\n\t\t\t\tif (!(response instanceof Response)) {\n\t\t\t\t\tthrow new Error(\"Your Pages function should return a Response\");\n\t\t\t\t}\n\n\t\t\t\treturn cloneResponse(response);\n\t\t\t} else if (__FALLBACK_SERVICE__) {\n\t\t\t\t// There are no more handlers so finish with the fallback service (`env.ASSETS.fetch` in Pages' case)\n\t\t\t\tconst response = await env[__FALLBACK_SERVICE__].fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t} else {\n\t\t\t\t// There was not fallback service so actually make the request to the origin.\n\t\t\t\tconst response = await fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t}\n\t\t};\n\n\t\ttry {\n\t\t\treturn await next();\n\t\t} catch (error) {\n\t\t\tif (isFailOpen) {\n\t\t\t\tconst response = await env[__FALLBACK_SERVICE__].fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t}\n\t},\n};\n\n// This makes a Response mutable\nconst cloneResponse = (response: Response) =>\n\t// https://fetch.spec.whatwg.org/#null-body-status\n\tnew Response(\n\t\t[101, 204, 205, 304].includes(response.status) ? null : response.body,\n\t\tresponse\n\t);\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/home/lium/chatsvtr/node_modules/wrangler/templates/pages-template-worker.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/home/lium/chatsvtr/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/home/lium/chatsvtr/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/home/lium/chatsvtr/node_modules/wrangler/templates/pages-template-worker.ts\";\n\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/home/lium/chatsvtr/.wrangler/tmp/bundle-wgw33r/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/home/lium/chatsvtr/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/home/lium/chatsvtr/.wrangler/tmp/bundle-wgw33r/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/home/lium/chatsvtr/.wrangler/tmp/bundle-wgw33r/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": ["match", "match", "match", "BASE_SYSTEM_PROMPT", "onRequestPost", "onRequestOptions", "onRequestOptions", "onRequestPost", "value", "_a", "result", "char", "prefix", "i"]
}
